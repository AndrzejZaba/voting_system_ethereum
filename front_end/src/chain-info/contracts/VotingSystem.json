{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "candidates",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "receivedVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionChief",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finishElection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "stringOne",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "stringTwo",
          "type": "string"
        }
      ],
      "name": "isTheSameString",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "listOfCandidates",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "receivedVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "voterName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "voterSurname",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "voterPESEL",
          "type": "string"
        }
      ],
      "name": "verifyVoter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "voterEligible",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "voterName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "voterSurname",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "voterPESEL",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "candidateName",
          "type": "string"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "surname",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "PESEL",
          "type": "string"
        },
        {
          "internalType": "int16",
          "name": "age",
          "type": "int16"
        },
        {
          "internalType": "bool",
          "name": "allowedToVote",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "candidateName",
          "type": "string"
        }
      ],
      "name": "votesValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/VotingSystem.sol"
  },
  "ast": {
    "absolutePath": "contracts/VotingSystem.sol",
    "exportedSymbols": {
      "VotingSystem": [
        406
      ]
    },
    "id": 407,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "VotingSystem",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 406,
        "linearizedBaseContracts": [
          406
        ],
        "name": "VotingSystem",
        "nameLocation": "68:12:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "VotingSystem.Voter",
            "id": 12,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "117:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "110:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "110:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "surname",
                "nameLocation": "138:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "131:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "131:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "PESEL",
                "nameLocation": "162:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "155:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 6,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "155:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "age",
                "nameLocation": "202:3:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "196:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int16",
                  "typeString": "int16"
                },
                "typeName": {
                  "id": 8,
                  "name": "int16",
                  "nodeType": "ElementaryTypeName",
                  "src": "196:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int16",
                    "typeString": "int16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "allowedToVote",
                "nameLocation": "257:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "252:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 10,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "252:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nameLocation": "94:5:0",
            "nodeType": "StructDefinition",
            "scope": 406,
            "src": "87:242:0",
            "visibility": "public"
          },
          {
            "canonicalName": "VotingSystem.Candidate",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "369:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "362:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 13,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "362:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "receivedVotes",
                "nameLocation": "391:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "383:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "383:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Candidate",
            "nameLocation": "342:9:0",
            "nodeType": "StructDefinition",
            "scope": 406,
            "src": "335:128:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "65e0647d",
            "id": 19,
            "mutability": "mutable",
            "name": "electionChief",
            "nameLocation": "484:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "469:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 18,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "469:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4a39d442",
            "id": 21,
            "mutability": "mutable",
            "name": "electionOpen",
            "nameLocation": "515:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "503:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 20,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "503:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "53fa2e64",
            "id": 26,
            "mutability": "mutable",
            "name": "voters",
            "nameLocation": "566:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "534:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Voter_$12_storage_$",
              "typeString": "mapping(string => struct VotingSystem.Voter)"
            },
            "typeName": {
              "id": 25,
              "keyType": {
                "id": 22,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "542:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "534:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Voter_$12_storage_$",
                "typeString": "mapping(string => struct VotingSystem.Voter)"
              },
              "valueType": {
                "id": 24,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 23,
                  "name": "Voter",
                  "nameLocations": [
                    "552:5:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12,
                  "src": "552:5:0"
                },
                "referencedDeclaration": 12,
                "src": "552:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                  "typeString": "struct VotingSystem.Voter"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c5539cc2",
            "id": 31,
            "mutability": "mutable",
            "name": "candidates",
            "nameLocation": "699:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "663:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Candidate_$17_storage_$",
              "typeString": "mapping(string => struct VotingSystem.Candidate)"
            },
            "typeName": {
              "id": 30,
              "keyType": {
                "id": 27,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "671:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "663:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Candidate_$17_storage_$",
                "typeString": "mapping(string => struct VotingSystem.Candidate)"
              },
              "valueType": {
                "id": 29,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 28,
                  "name": "Candidate",
                  "nameLocations": [
                    "681:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17,
                  "src": "681:9:0"
                },
                "referencedDeclaration": 17,
                "src": "681:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Candidate_$17_storage_ptr",
                  "typeString": "struct VotingSystem.Candidate"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "92d7df4a",
            "id": 35,
            "mutability": "mutable",
            "name": "listOfCandidates",
            "nameLocation": "768:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "749:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Candidate_$17_storage_$dyn_storage",
              "typeString": "struct VotingSystem.Candidate[]"
            },
            "typeName": {
              "baseType": {
                "id": 33,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 32,
                  "name": "Candidate",
                  "nameLocations": [
                    "749:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17,
                  "src": "749:9:0"
                },
                "referencedDeclaration": 17,
                "src": "749:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Candidate_$17_storage_ptr",
                  "typeString": "struct VotingSystem.Candidate"
                }
              },
              "id": 34,
              "nodeType": "ArrayTypeName",
              "src": "749:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Candidate_$17_storage_$dyn_storage_ptr",
                "typeString": "struct VotingSystem.Candidate[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "805:133:0",
              "statements": [
                {
                  "expression": {
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38,
                      "name": "electionChief",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "815:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 39,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "831:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "835:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "831:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "815:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "815:26:0"
                },
                {
                  "expression": {
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43,
                      "name": "electionOpen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "851:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "866:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "851:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "851:19:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47,
                      "name": "initializeVoters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "881:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "881:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "881:18:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50,
                      "name": "initializeCandidates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 276,
                      "src": "909:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "909:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "909:22:0"
                }
              ]
            },
            "id": 54,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "802:2:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "805:0:0"
            },
            "scope": 406,
            "src": "791:147:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "1111:305:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66,
                        "name": "electionOpen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1129:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456c656374696f6e20697320636c6f73656421",
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1143:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e7add5924949935e45c69fb545f3295987201dfb1eeb104e4585b640c7af5c5",
                          "typeString": "literal_string \"Election is closed!\""
                        },
                        "value": "Election is closed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e7add5924949935e45c69fb545f3295987201dfb1eeb104e4585b640c7af5c5",
                          "typeString": "literal_string \"Election is closed!\""
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1121:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1121:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "1121:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 72,
                            "name": "voterName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "1208:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 73,
                            "name": "voterSurname",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "1219:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 74,
                            "name": "voterPESEL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "1233:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 71,
                          "name": "verifyVoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "1196:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory,string memory,string memory) view returns (bool)"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1196:48:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f746572206469646e27742066756c66696c6c7320726571756972656d656e747321",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1258:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a786cfd81f744e5c69a4659009065883f9253b7826a9df2b0facc1f9f4234a48",
                          "typeString": "literal_string \"Voter didn't fulfills requirements!\""
                        },
                        "value": "Voter didn't fulfills requirements!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a786cfd81f744e5c69a4659009065883f9253b7826a9df2b0facc1f9f4234a48",
                          "typeString": "literal_string \"Voter didn't fulfills requirements!\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1175:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1175:130:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1175:130:0"
                },
                {
                  "expression": {
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 79,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "1315:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Voter_$12_storage_$",
                            "typeString": "mapping(string memory => struct VotingSystem.Voter storage ref)"
                          }
                        },
                        "id": 81,
                        "indexExpression": {
                          "id": 80,
                          "name": "voterPESEL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "1322:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1315:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage",
                          "typeString": "struct VotingSystem.Voter storage ref"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1334:13:0",
                      "memberName": "allowedToVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1315:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1350:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1315:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1315:40:0"
                },
                {
                  "expression": {
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 86,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1365:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Candidate_$17_storage_$",
                            "typeString": "mapping(string memory => struct VotingSystem.Candidate storage ref)"
                          }
                        },
                        "id": 88,
                        "indexExpression": {
                          "id": 87,
                          "name": "candidateName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1376:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1365:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$17_storage",
                          "typeString": "struct VotingSystem.Candidate storage ref"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1391:13:0",
                      "memberName": "receivedVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "1365:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1408:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1365:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1365:44:0"
                }
              ]
            },
            "functionSelector": "9b3bc156",
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "953:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "voterName",
                  "nameLocation": "981:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "967:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "voterSurname",
                  "nameLocation": "1014:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1000:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "voterPESEL",
                  "nameLocation": "1050:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1036:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "candidateName",
                  "nameLocation": "1084:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1070:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "957:146:0"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1111:0:0"
            },
            "scope": 406,
            "src": "944:472:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "1593:772:0",
              "statements": [
                {
                  "assignments": [
                    107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 107,
                      "mutability": "mutable",
                      "name": "currentVoter",
                      "nameLocation": "1616:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 155,
                      "src": "1603:25:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_memory_ptr",
                        "typeString": "struct VotingSystem.Voter"
                      },
                      "typeName": {
                        "id": 106,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 105,
                          "name": "Voter",
                          "nameLocations": [
                            "1603:5:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12,
                          "src": "1603:5:0"
                        },
                        "referencedDeclaration": 12,
                        "src": "1603:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct VotingSystem.Voter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 111,
                  "initialValue": {
                    "baseExpression": {
                      "id": 108,
                      "name": "voters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1631:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Voter_$12_storage_$",
                        "typeString": "mapping(string memory => struct VotingSystem.Voter storage ref)"
                      }
                    },
                    "id": 110,
                    "indexExpression": {
                      "id": 109,
                      "name": "voterPESEL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "1638:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1631:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$12_storage",
                      "typeString": "struct VotingSystem.Voter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1603:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 114,
                              "name": "currentVoter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "1696:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$12_memory_ptr",
                                "typeString": "struct VotingSystem.Voter memory"
                              }
                            },
                            "id": 115,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1709:5:0",
                            "memberName": "PESEL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7,
                            "src": "1696:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 116,
                            "name": "voterPESEL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1716:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 113,
                          "name": "isTheSameString",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 405,
                          "src": "1680:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory,string memory) pure returns (bool)"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1680:47:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320706572736f6e20646f65736e27742065786973747320696e20766f7465727320646174616261736521",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1741:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c5349a1de11e7d218721437b0a6eabb26e33daa37af2a5c59df0b27d4f934b4",
                          "typeString": "literal_string \"This person doesn't exists in voters database!\""
                        },
                        "value": "This person doesn't exists in voters database!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c5349a1de11e7d218721437b0a6eabb26e33daa37af2a5c59df0b27d4f934b4",
                          "typeString": "literal_string \"This person doesn't exists in voters database!\""
                        }
                      ],
                      "id": 112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1659:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1659:140:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1659:140:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 123,
                              "name": "currentVoter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "1846:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$12_memory_ptr",
                                "typeString": "struct VotingSystem.Voter memory"
                              }
                            },
                            "id": 124,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1859:4:0",
                            "memberName": "name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3,
                            "src": "1846:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 125,
                            "name": "voterName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "1865:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 122,
                          "name": "isTheSameString",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 405,
                          "src": "1830:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory,string memory) pure returns (bool)"
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1830:45:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206e616d65206f662074686520706572736f6e206973206e6f7420636f727265637421",
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1889:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1c51f19f4147566324970abc1e12cccdbcdb064b8b46d498f7aa9009c1049c0",
                          "typeString": "literal_string \"The name of the person is not correct!\""
                        },
                        "value": "The name of the person is not correct!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1c51f19f4147566324970abc1e12cccdbcdb064b8b46d498f7aa9009c1049c0",
                          "typeString": "literal_string \"The name of the person is not correct!\""
                        }
                      ],
                      "id": 121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1809:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1809:130:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "1809:130:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 132,
                              "name": "currentVoter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "1986:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$12_memory_ptr",
                                "typeString": "struct VotingSystem.Voter memory"
                              }
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1999:7:0",
                            "memberName": "surname",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5,
                            "src": "1986:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 134,
                            "name": "voterSurname",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "2008:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 131,
                          "name": "isTheSameString",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 405,
                          "src": "1970:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory,string memory) pure returns (bool)"
                          }
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1970:51:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865207375726e616d65206f662074686520706572736f6e206973206e6f7420636f727265637421",
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2035:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_501378eb380b99606f5b82bb59df4f2973ed6f342d01fb2f84c38a4930f3aa93",
                          "typeString": "literal_string \"The surname of the person is not correct!\""
                        },
                        "value": "The surname of the person is not correct!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_501378eb380b99606f5b82bb59df4f2973ed6f342d01fb2f84c38a4930f3aa93",
                          "typeString": "literal_string \"The surname of the person is not correct!\""
                        }
                      ],
                      "id": 130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1949:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1949:139:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1949:139:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int16",
                          "typeString": "int16"
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 140,
                            "name": "currentVoter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "2106:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$12_memory_ptr",
                              "typeString": "struct VotingSystem.Voter memory"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2119:3:0",
                          "memberName": "age",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9,
                          "src": "2106:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int16",
                            "typeString": "int16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "3138",
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2126:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "2106:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706572736f6e206973206e6f7420616e206164756c7421",
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2130:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_248fce26301b2a3946965c06f8e386d5e4a5b456579c447bdcf7c02962aecddb",
                          "typeString": "literal_string \"The person is not an adult!\""
                        },
                        "value": "The person is not an adult!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_248fce26301b2a3946965c06f8e386d5e4a5b456579c447bdcf7c02962aecddb",
                          "typeString": "literal_string \"The person is not an adult!\""
                        }
                      ],
                      "id": 139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2098:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2098:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "2098:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 148,
                          "name": "currentVoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "2191:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$12_memory_ptr",
                            "typeString": "struct VotingSystem.Voter memory"
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2204:13:0",
                        "memberName": "allowedToVote",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "2191:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520706572736f6e206973206e6f7420616c6c6f77656420746f20766f746521",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2231:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41e606651a3398332bf4fbbc99c71f757fcbcad15e5c4e7db6000b6e8d8501d8",
                          "typeString": "literal_string \"The person is not allowed to vote!\""
                        },
                        "value": "The person is not allowed to vote!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41e606651a3398332bf4fbbc99c71f757fcbcad15e5c4e7db6000b6e8d8501d8",
                          "typeString": "literal_string \"The person is not allowed to vote!\""
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2170:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2170:107:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "2170:107:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2294:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 104,
                  "id": 154,
                  "nodeType": "Return",
                  "src": "2287:11:0"
                }
              ]
            },
            "functionSelector": "4f834f1c",
            "id": 156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyVoter",
            "nameLocation": "1431:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "voterName",
                  "nameLocation": "1466:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1452:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1452:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "voterSurname",
                  "nameLocation": "1499:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1485:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1485:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "voterPESEL",
                  "nameLocation": "1535:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1521:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1521:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1442:109:0"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "voterEligible",
                  "nameLocation": "1578:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1573:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1573:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1572:20:0"
            },
            "scope": 406,
            "src": "1422:943:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 167,
              "nodeType": "Block",
              "src": "2392:91:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 159,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2410:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2414:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2410:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 161,
                          "name": "electionChief",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "2424:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2410:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742074686520636f6e7472616374206f776e657221",
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2439:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_243c1a599f96107caa6d04bcba061dbe530bba8116419d5e2425a45929452f24",
                          "typeString": "literal_string \"Not the contract owner!\""
                        },
                        "value": "Not the contract owner!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_243c1a599f96107caa6d04bcba061dbe530bba8116419d5e2425a45929452f24",
                          "typeString": "literal_string \"Not the contract owner!\""
                        }
                      ],
                      "id": 158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2402:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2402:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2402:63:0"
                },
                {
                  "id": 166,
                  "nodeType": "PlaceholderStatement",
                  "src": "2475:1:0"
                }
              ]
            },
            "id": 168,
            "name": "onlyOwner",
            "nameLocation": "2380:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2389:2:0"
            },
            "src": "2371:112:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "2532:328:0",
              "statements": [
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 173,
                      "name": "electionOpen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "2542:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2557:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2542:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "2542:20:0"
                },
                {
                  "expression": {
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 177,
                          "name": "listOfCandidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "2572:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$17_storage_$dyn_storage",
                            "typeString": "struct VotingSystem.Candidate storage ref[] storage ref"
                          }
                        },
                        "id": 179,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2589:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2572:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$17_storage",
                          "typeString": "struct VotingSystem.Candidate storage ref"
                        }
                      },
                      "id": 180,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2592:13:0",
                      "memberName": "receivedVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "2572:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 181,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "2608:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Candidate_$17_storage_$",
                            "typeString": "mapping(string memory => struct VotingSystem.Candidate storage ref)"
                          }
                        },
                        "id": 183,
                        "indexExpression": {
                          "hexValue": "4b616e64796461742031",
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2619:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b3cd70d996892808bba58074a39156ef6d10810ff00f98223c7104e689986e36",
                            "typeString": "literal_string \"Kandydat 1\""
                          },
                          "value": "Kandydat 1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2608:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$17_storage",
                          "typeString": "struct VotingSystem.Candidate storage ref"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2646:13:0",
                      "memberName": "receivedVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "2608:51:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2572:87:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2572:87:0"
                },
                {
                  "expression": {
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 187,
                          "name": "listOfCandidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "2669:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$17_storage_$dyn_storage",
                            "typeString": "struct VotingSystem.Candidate storage ref[] storage ref"
                          }
                        },
                        "id": 189,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2686:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2669:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$17_storage",
                          "typeString": "struct VotingSystem.Candidate storage ref"
                        }
                      },
                      "id": 190,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2689:13:0",
                      "memberName": "receivedVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "2669:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 191,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "2705:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Candidate_$17_storage_$",
                            "typeString": "mapping(string memory => struct VotingSystem.Candidate storage ref)"
                          }
                        },
                        "id": 193,
                        "indexExpression": {
                          "hexValue": "4b616e64796461742032",
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2716:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_7c7db0f6a622ce3ded908814b05c3d7cab57f314448336199395a6c7a708c2e4",
                            "typeString": "literal_string \"Kandydat 2\""
                          },
                          "value": "Kandydat 2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2705:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$17_storage",
                          "typeString": "struct VotingSystem.Candidate storage ref"
                        }
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2743:13:0",
                      "memberName": "receivedVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "2705:51:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2669:87:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:87:0"
                },
                {
                  "expression": {
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 197,
                          "name": "listOfCandidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "2766:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$17_storage_$dyn_storage",
                            "typeString": "struct VotingSystem.Candidate storage ref[] storage ref"
                          }
                        },
                        "id": 199,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2783:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2766:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$17_storage",
                          "typeString": "struct VotingSystem.Candidate storage ref"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2786:13:0",
                      "memberName": "receivedVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "2766:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 201,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "2802:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Candidate_$17_storage_$",
                            "typeString": "mapping(string memory => struct VotingSystem.Candidate storage ref)"
                          }
                        },
                        "id": 203,
                        "indexExpression": {
                          "hexValue": "4b616e64796461742033",
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2813:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_603e6a9e0b15c927b58fd50818182cd81da513000f8203f36d1becb02d981d13",
                            "typeString": "literal_string \"Kandydat 3\""
                          },
                          "value": "Kandydat 3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2802:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$17_storage",
                          "typeString": "struct VotingSystem.Candidate storage ref"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2840:13:0",
                      "memberName": "receivedVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "2802:51:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2766:87:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "2766:87:0"
                }
              ]
            },
            "functionSelector": "90173864",
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 171,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 170,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2522:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 168,
                  "src": "2522:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2522:9:0"
              }
            ],
            "name": "finishElection",
            "nameLocation": "2498:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2512:2:0"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2532:0:0"
            },
            "scope": 406,
            "src": "2489:371:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "2973:63:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 215,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "2990:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Candidate_$17_storage_$",
                          "typeString": "mapping(string memory => struct VotingSystem.Candidate storage ref)"
                        }
                      },
                      "id": 217,
                      "indexExpression": {
                        "id": 216,
                        "name": "candidateName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "3001:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2990:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$17_storage",
                        "typeString": "struct VotingSystem.Candidate storage ref"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3016:13:0",
                    "memberName": "receivedVotes",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 16,
                    "src": "2990:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 214,
                  "id": 219,
                  "nodeType": "Return",
                  "src": "2983:46:0"
                }
              ]
            },
            "functionSelector": "8871d5bb",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "votesValue",
            "nameLocation": "2875:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "candidateName",
                  "nameLocation": "2900:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "2886:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2886:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2885:29:0"
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "2960:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2960:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2959:9:0"
            },
            "scope": 406,
            "src": "2866:170:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "3083:487:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4b616e64796461742031",
                            "id": 228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3145:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b3cd70d996892808bba58074a39156ef6d10810ff00f98223c7104e689986e36",
                              "typeString": "literal_string \"Kandydat 1\""
                            },
                            "value": "Kandydat 1"
                          },
                          {
                            "hexValue": "30",
                            "id": 229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3174:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_b3cd70d996892808bba58074a39156ef6d10810ff00f98223c7104e689986e36",
                              "typeString": "literal_string \"Kandydat 1\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 227,
                          "name": "Candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "3128:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Candidate_$17_storage_ptr_$",
                            "typeString": "type(struct VotingSystem.Candidate storage pointer)"
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "3139:4:0",
                          "3159:13:0"
                        ],
                        "names": [
                          "name",
                          "receivedVotes"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "3128:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$17_memory_ptr",
                          "typeString": "struct VotingSystem.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$17_memory_ptr",
                          "typeString": "struct VotingSystem.Candidate memory"
                        }
                      ],
                      "expression": {
                        "id": 224,
                        "name": "listOfCandidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "3093:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$17_storage_$dyn_storage",
                          "typeString": "struct VotingSystem.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3110:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3093:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$17_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$17_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$17_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct VotingSystem.Candidate storage ref[] storage pointer,struct VotingSystem.Candidate storage ref)"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3093:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "3093:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4b616e64796461742032",
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3249:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7c7db0f6a622ce3ded908814b05c3d7cab57f314448336199395a6c7a708c2e4",
                              "typeString": "literal_string \"Kandydat 2\""
                            },
                            "value": "Kandydat 2"
                          },
                          {
                            "hexValue": "30",
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3278:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7c7db0f6a622ce3ded908814b05c3d7cab57f314448336199395a6c7a708c2e4",
                              "typeString": "literal_string \"Kandydat 2\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 236,
                          "name": "Candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "3232:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Candidate_$17_storage_ptr_$",
                            "typeString": "type(struct VotingSystem.Candidate storage pointer)"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "3243:4:0",
                          "3263:13:0"
                        ],
                        "names": [
                          "name",
                          "receivedVotes"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "3232:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$17_memory_ptr",
                          "typeString": "struct VotingSystem.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$17_memory_ptr",
                          "typeString": "struct VotingSystem.Candidate memory"
                        }
                      ],
                      "expression": {
                        "id": 233,
                        "name": "listOfCandidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "3197:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$17_storage_$dyn_storage",
                          "typeString": "struct VotingSystem.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3214:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3197:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$17_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$17_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$17_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct VotingSystem.Candidate storage ref[] storage pointer,struct VotingSystem.Candidate storage ref)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3197:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "3197:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4b616e64796461742033",
                            "id": 246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3353:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_603e6a9e0b15c927b58fd50818182cd81da513000f8203f36d1becb02d981d13",
                              "typeString": "literal_string \"Kandydat 3\""
                            },
                            "value": "Kandydat 3"
                          },
                          {
                            "hexValue": "30",
                            "id": 247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3382:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_603e6a9e0b15c927b58fd50818182cd81da513000f8203f36d1becb02d981d13",
                              "typeString": "literal_string \"Kandydat 3\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 245,
                          "name": "Candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "3336:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Candidate_$17_storage_ptr_$",
                            "typeString": "type(struct VotingSystem.Candidate storage pointer)"
                          }
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "3347:4:0",
                          "3367:13:0"
                        ],
                        "names": [
                          "name",
                          "receivedVotes"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "3336:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$17_memory_ptr",
                          "typeString": "struct VotingSystem.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$17_memory_ptr",
                          "typeString": "struct VotingSystem.Candidate memory"
                        }
                      ],
                      "expression": {
                        "id": 242,
                        "name": "listOfCandidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "3301:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$17_storage_$dyn_storage",
                          "typeString": "struct VotingSystem.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3318:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3301:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$17_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$17_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$17_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct VotingSystem.Candidate storage ref[] storage pointer,struct VotingSystem.Candidate storage ref)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3301:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "3301:94:0"
                },
                {
                  "expression": {
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 251,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "3405:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Candidate_$17_storage_$",
                          "typeString": "mapping(string memory => struct VotingSystem.Candidate storage ref)"
                        }
                      },
                      "id": 253,
                      "indexExpression": {
                        "hexValue": "4b616e64796461742031",
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3416:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3cd70d996892808bba58074a39156ef6d10810ff00f98223c7104e689986e36",
                          "typeString": "literal_string \"Kandydat 1\""
                        },
                        "value": "Kandydat 1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3405:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$17_storage",
                        "typeString": "struct VotingSystem.Candidate storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 254,
                        "name": "listOfCandidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "3432:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$17_storage_$dyn_storage",
                          "typeString": "struct VotingSystem.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 256,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3449:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3432:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$17_storage",
                        "typeString": "struct VotingSystem.Candidate storage ref"
                      }
                    },
                    "src": "3405:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Candidate_$17_storage",
                      "typeString": "struct VotingSystem.Candidate storage ref"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "3405:46:0"
                },
                {
                  "expression": {
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 259,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "3461:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Candidate_$17_storage_$",
                          "typeString": "mapping(string memory => struct VotingSystem.Candidate storage ref)"
                        }
                      },
                      "id": 261,
                      "indexExpression": {
                        "hexValue": "4b616e64796461742032",
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3472:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c7db0f6a622ce3ded908814b05c3d7cab57f314448336199395a6c7a708c2e4",
                          "typeString": "literal_string \"Kandydat 2\""
                        },
                        "value": "Kandydat 2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3461:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$17_storage",
                        "typeString": "struct VotingSystem.Candidate storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 262,
                        "name": "listOfCandidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "3488:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$17_storage_$dyn_storage",
                          "typeString": "struct VotingSystem.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 264,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3505:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3488:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$17_storage",
                        "typeString": "struct VotingSystem.Candidate storage ref"
                      }
                    },
                    "src": "3461:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Candidate_$17_storage",
                      "typeString": "struct VotingSystem.Candidate storage ref"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "3461:46:0"
                },
                {
                  "expression": {
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 267,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "3517:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Candidate_$17_storage_$",
                          "typeString": "mapping(string memory => struct VotingSystem.Candidate storage ref)"
                        }
                      },
                      "id": 269,
                      "indexExpression": {
                        "hexValue": "4b616e64796461742033",
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3528:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_603e6a9e0b15c927b58fd50818182cd81da513000f8203f36d1becb02d981d13",
                          "typeString": "literal_string \"Kandydat 3\""
                        },
                        "value": "Kandydat 3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3517:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$17_storage",
                        "typeString": "struct VotingSystem.Candidate storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 270,
                        "name": "listOfCandidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "3544:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$17_storage_$dyn_storage",
                          "typeString": "struct VotingSystem.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 272,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3561:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3544:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$17_storage",
                        "typeString": "struct VotingSystem.Candidate storage ref"
                      }
                    },
                    "src": "3517:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Candidate_$17_storage",
                      "typeString": "struct VotingSystem.Candidate storage ref"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "3517:46:0"
                }
              ]
            },
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeCandidates",
            "nameLocation": "3051:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3071:2:0"
            },
            "returnParameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3083:0:0"
            },
            "scope": 406,
            "src": "3042:528:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 375,
              "nodeType": "Block",
              "src": "3613:1593:0",
              "statements": [
                {
                  "expression": {
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 279,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "3623:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Voter_$12_storage_$",
                          "typeString": "mapping(string memory => struct VotingSystem.Voter storage ref)"
                        }
                      },
                      "id": 281,
                      "indexExpression": {
                        "hexValue": "3030323233333930343332",
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3630:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27b11c1efb08ce7c42cac54e9e000429a64c2864410a68f5977db64574c527c4",
                          "typeString": "literal_string \"00223390432\""
                        },
                        "value": "00223390432"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3623:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_storage",
                        "typeString": "struct VotingSystem.Voter storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4a616e",
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3673:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4a18c9083b936e0757952a5d9d34b5575d427661506fbe9908c2a1da3f3e80d9",
                            "typeString": "literal_string \"Jan\""
                          },
                          "value": "Jan"
                        },
                        {
                          "hexValue": "4b6f77616c736b69",
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3701:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_09ee703310a3ea3fce7f83246c4104d6368ac230f70cfe3765b9424cfd8d14d1",
                            "typeString": "literal_string \"Kowalski\""
                          },
                          "value": "Kowalski"
                        },
                        {
                          "hexValue": "3030323233333930343332",
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3732:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_27b11c1efb08ce7c42cac54e9e000429a64c2864410a68f5977db64574c527c4",
                            "typeString": "literal_string \"00223390432\""
                          },
                          "value": "00223390432"
                        },
                        {
                          "hexValue": "3232",
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3764:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_22_by_1",
                            "typeString": "int_const 22"
                          },
                          "value": "22"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3795:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_4a18c9083b936e0757952a5d9d34b5575d427661506fbe9908c2a1da3f3e80d9",
                            "typeString": "literal_string \"Jan\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_09ee703310a3ea3fce7f83246c4104d6368ac230f70cfe3765b9424cfd8d14d1",
                            "typeString": "literal_string \"Kowalski\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_27b11c1efb08ce7c42cac54e9e000429a64c2864410a68f5977db64574c527c4",
                            "typeString": "literal_string \"00223390432\""
                          },
                          {
                            "typeIdentifier": "t_rational_22_by_1",
                            "typeString": "int_const 22"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 282,
                        "name": "Voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3647:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Voter_$12_storage_ptr_$",
                          "typeString": "type(struct VotingSystem.Voter storage pointer)"
                        }
                      },
                      "id": 288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3667:4:0",
                        "3692:7:0",
                        "3725:5:0",
                        "3759:3:0",
                        "3780:13:0"
                      ],
                      "names": [
                        "name",
                        "surname",
                        "PESEL",
                        "age",
                        "allowedToVote"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3647:163:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_memory_ptr",
                        "typeString": "struct VotingSystem.Voter memory"
                      }
                    },
                    "src": "3623:187:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$12_storage",
                      "typeString": "struct VotingSystem.Voter storage ref"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "3623:187:0"
                },
                {
                  "expression": {
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 291,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "3820:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Voter_$12_storage_$",
                          "typeString": "mapping(string memory => struct VotingSystem.Voter storage ref)"
                        }
                      },
                      "id": 293,
                      "indexExpression": {
                        "hexValue": "3930303232303734333332",
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3827:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5d9d373b730610a74c8c669fc1f1c3b53da8b1f7fd4cf3eef702b2418c8893e",
                          "typeString": "literal_string \"90022074332\""
                        },
                        "value": "90022074332"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3820:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_storage",
                        "typeString": "struct VotingSystem.Voter storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "48616c696e61",
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3870:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e920877d4c4888f50c285e69489fb2f322984843a3205988acc969c0b96c7124",
                            "typeString": "literal_string \"Halina\""
                          },
                          "value": "Halina"
                        },
                        {
                          "hexValue": "4e6f77616b",
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3901:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c1f08e28e666ad4afcf47a6e5a3ffaa385ded008a84dc91002d497a56f92f955",
                            "typeString": "literal_string \"Nowak\""
                          },
                          "value": "Nowak"
                        },
                        {
                          "hexValue": "3930303232303734333332",
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3929:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d5d9d373b730610a74c8c669fc1f1c3b53da8b1f7fd4cf3eef702b2418c8893e",
                            "typeString": "literal_string \"90022074332\""
                          },
                          "value": "90022074332"
                        },
                        {
                          "hexValue": "3332",
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3961:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          "value": "32"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3992:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_e920877d4c4888f50c285e69489fb2f322984843a3205988acc969c0b96c7124",
                            "typeString": "literal_string \"Halina\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c1f08e28e666ad4afcf47a6e5a3ffaa385ded008a84dc91002d497a56f92f955",
                            "typeString": "literal_string \"Nowak\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_d5d9d373b730610a74c8c669fc1f1c3b53da8b1f7fd4cf3eef702b2418c8893e",
                            "typeString": "literal_string \"90022074332\""
                          },
                          {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 294,
                        "name": "Voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3844:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Voter_$12_storage_ptr_$",
                          "typeString": "type(struct VotingSystem.Voter storage pointer)"
                        }
                      },
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3864:4:0",
                        "3892:7:0",
                        "3922:5:0",
                        "3956:3:0",
                        "3977:13:0"
                      ],
                      "names": [
                        "name",
                        "surname",
                        "PESEL",
                        "age",
                        "allowedToVote"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3844:163:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_memory_ptr",
                        "typeString": "struct VotingSystem.Voter memory"
                      }
                    },
                    "src": "3820:187:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$12_storage",
                      "typeString": "struct VotingSystem.Voter storage ref"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "3820:187:0"
                },
                {
                  "expression": {
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 303,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "4017:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Voter_$12_storage_$",
                          "typeString": "mapping(string memory => struct VotingSystem.Voter storage ref)"
                        }
                      },
                      "id": 305,
                      "indexExpression": {
                        "hexValue": "3933303331303635343635",
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4024:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_caffa73b6922bfebc45fa18ff06ab33f88c7db1adeba1da584b23305bd455e26",
                          "typeString": "literal_string \"93031065465\""
                        },
                        "value": "93031065465"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4017:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_storage",
                        "typeString": "struct VotingSystem.Voter storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4c756477696b",
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4067:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_30886b915fff8e02cee2bc157a71a293e8c57d9040d8d85c9c8f26d3e43c4d77",
                            "typeString": "literal_string \"Ludwik\""
                          },
                          "value": "Ludwik"
                        },
                        {
                          "hexValue": "4d6f6e74676f6d6d657279",
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4098:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_711d764274f326fc3bf240dcf08c7b216c9763693026f06410b875c99f9364b2",
                            "typeString": "literal_string \"Montgommery\""
                          },
                          "value": "Montgommery"
                        },
                        {
                          "hexValue": "3933303331303635343635",
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4132:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_caffa73b6922bfebc45fa18ff06ab33f88c7db1adeba1da584b23305bd455e26",
                            "typeString": "literal_string \"93031065465\""
                          },
                          "value": "93031065465"
                        },
                        {
                          "hexValue": "3239",
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4164:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_29_by_1",
                            "typeString": "int_const 29"
                          },
                          "value": "29"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4195:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_30886b915fff8e02cee2bc157a71a293e8c57d9040d8d85c9c8f26d3e43c4d77",
                            "typeString": "literal_string \"Ludwik\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_711d764274f326fc3bf240dcf08c7b216c9763693026f06410b875c99f9364b2",
                            "typeString": "literal_string \"Montgommery\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_caffa73b6922bfebc45fa18ff06ab33f88c7db1adeba1da584b23305bd455e26",
                            "typeString": "literal_string \"93031065465\""
                          },
                          {
                            "typeIdentifier": "t_rational_29_by_1",
                            "typeString": "int_const 29"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 306,
                        "name": "Voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "4041:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Voter_$12_storage_ptr_$",
                          "typeString": "type(struct VotingSystem.Voter storage pointer)"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4061:4:0",
                        "4089:7:0",
                        "4125:5:0",
                        "4159:3:0",
                        "4180:13:0"
                      ],
                      "names": [
                        "name",
                        "surname",
                        "PESEL",
                        "age",
                        "allowedToVote"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4041:169:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_memory_ptr",
                        "typeString": "struct VotingSystem.Voter memory"
                      }
                    },
                    "src": "4017:193:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$12_storage",
                      "typeString": "struct VotingSystem.Voter storage ref"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "4017:193:0"
                },
                {
                  "expression": {
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 315,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "4220:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Voter_$12_storage_$",
                          "typeString": "mapping(string memory => struct VotingSystem.Voter storage ref)"
                        }
                      },
                      "id": 317,
                      "indexExpression": {
                        "hexValue": "3830303330343835363638",
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4227:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48c96428f180ca4666764c098553dd03130a59cc8595b4ac4b7673f70b1855ce",
                          "typeString": "literal_string \"80030485668\""
                        },
                        "value": "80030485668"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4220:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_storage",
                        "typeString": "struct VotingSystem.Voter storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4b617461727a796e61",
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4270:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5eebff9286ea9c4cbbe6f26929019b56887772ef7892155fe89691b0cf62f169",
                            "typeString": "literal_string \"Katarzyna\""
                          },
                          "value": "Katarzyna"
                        },
                        {
                          "hexValue": "4d616b",
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4304:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f236073f6a1dd78b2bc5084d94ae25fbd999108ef2057910bd05a5b5b5b55245",
                            "typeString": "literal_string \"Mak\""
                          },
                          "value": "Mak"
                        },
                        {
                          "hexValue": "3830303330343835363638",
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4330:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_48c96428f180ca4666764c098553dd03130a59cc8595b4ac4b7673f70b1855ce",
                            "typeString": "literal_string \"80030485668\""
                          },
                          "value": "80030485668"
                        },
                        {
                          "hexValue": "3432",
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4362:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_42_by_1",
                            "typeString": "int_const 42"
                          },
                          "value": "42"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4393:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_5eebff9286ea9c4cbbe6f26929019b56887772ef7892155fe89691b0cf62f169",
                            "typeString": "literal_string \"Katarzyna\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_f236073f6a1dd78b2bc5084d94ae25fbd999108ef2057910bd05a5b5b5b55245",
                            "typeString": "literal_string \"Mak\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_48c96428f180ca4666764c098553dd03130a59cc8595b4ac4b7673f70b1855ce",
                            "typeString": "literal_string \"80030485668\""
                          },
                          {
                            "typeIdentifier": "t_rational_42_by_1",
                            "typeString": "int_const 42"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 318,
                        "name": "Voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "4244:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Voter_$12_storage_ptr_$",
                          "typeString": "type(struct VotingSystem.Voter storage pointer)"
                        }
                      },
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4264:4:0",
                        "4295:7:0",
                        "4323:5:0",
                        "4357:3:0",
                        "4378:13:0"
                      ],
                      "names": [
                        "name",
                        "surname",
                        "PESEL",
                        "age",
                        "allowedToVote"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4244:164:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_memory_ptr",
                        "typeString": "struct VotingSystem.Voter memory"
                      }
                    },
                    "src": "4220:188:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$12_storage",
                      "typeString": "struct VotingSystem.Voter storage ref"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "4220:188:0"
                },
                {
                  "expression": {
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 327,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "4418:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Voter_$12_storage_$",
                          "typeString": "mapping(string memory => struct VotingSystem.Voter storage ref)"
                        }
                      },
                      "id": 329,
                      "indexExpression": {
                        "hexValue": "3931303830313936363632",
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4425:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87c6f17d783c52596449eb809b5eb511d0a8607a2b22596511c98c5cb36322ea",
                          "typeString": "literal_string \"91080196662\""
                        },
                        "value": "91080196662"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4418:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_storage",
                        "typeString": "struct VotingSystem.Voter storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4a6f616e6e61",
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4468:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_71b3c5bf535a2efcc4d7c2b8d45a988ddbc4baa6a094931ffba749fa77cd2d47",
                            "typeString": "literal_string \"Joanna\""
                          },
                          "value": "Joanna"
                        },
                        {
                          "hexValue": "5a796368",
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4499:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c2449d0111222dca1b90df778d5e837b071078c5eec3c3fdb271f9e5fddbcc21",
                            "typeString": "literal_string \"Zych\""
                          },
                          "value": "Zych"
                        },
                        {
                          "hexValue": "3931303830313936363632",
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4526:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_87c6f17d783c52596449eb809b5eb511d0a8607a2b22596511c98c5cb36322ea",
                            "typeString": "literal_string \"91080196662\""
                          },
                          "value": "91080196662"
                        },
                        {
                          "hexValue": "3331",
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4558:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_31_by_1",
                            "typeString": "int_const 31"
                          },
                          "value": "31"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4589:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_71b3c5bf535a2efcc4d7c2b8d45a988ddbc4baa6a094931ffba749fa77cd2d47",
                            "typeString": "literal_string \"Joanna\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c2449d0111222dca1b90df778d5e837b071078c5eec3c3fdb271f9e5fddbcc21",
                            "typeString": "literal_string \"Zych\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_87c6f17d783c52596449eb809b5eb511d0a8607a2b22596511c98c5cb36322ea",
                            "typeString": "literal_string \"91080196662\""
                          },
                          {
                            "typeIdentifier": "t_rational_31_by_1",
                            "typeString": "int_const 31"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 330,
                        "name": "Voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "4442:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Voter_$12_storage_ptr_$",
                          "typeString": "type(struct VotingSystem.Voter storage pointer)"
                        }
                      },
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4462:4:0",
                        "4490:7:0",
                        "4519:5:0",
                        "4553:3:0",
                        "4574:13:0"
                      ],
                      "names": [
                        "name",
                        "surname",
                        "PESEL",
                        "age",
                        "allowedToVote"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4442:162:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_memory_ptr",
                        "typeString": "struct VotingSystem.Voter memory"
                      }
                    },
                    "src": "4418:186:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$12_storage",
                      "typeString": "struct VotingSystem.Voter storage ref"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "4418:186:0"
                },
                {
                  "expression": {
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 339,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "4614:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Voter_$12_storage_$",
                          "typeString": "mapping(string memory => struct VotingSystem.Voter storage ref)"
                        }
                      },
                      "id": 341,
                      "indexExpression": {
                        "hexValue": "3031333032343137333437",
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4621:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca58c7bde70d1478482127a3d89d643cafb9268495c2bd0888b72bb4983cb2e5",
                          "typeString": "literal_string \"01302417347\""
                        },
                        "value": "01302417347"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4614:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_storage",
                        "typeString": "struct VotingSystem.Voter storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4d6f6e696b61",
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4664:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ff5fce97fa06dc4b31d2b4d8004100bdfcd45c4a07bbce0fdf688fecb9a2571d",
                            "typeString": "literal_string \"Monika\""
                          },
                          "value": "Monika"
                        },
                        {
                          "hexValue": "477261626f77736b61",
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4695:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_3fc66cdda73afa97ed1dda1503b8f4dcb1a602e49b30235847dd37d161e0f8f8",
                            "typeString": "literal_string \"Grabowska\""
                          },
                          "value": "Grabowska"
                        },
                        {
                          "hexValue": "3031333032343137333437",
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4727:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ca58c7bde70d1478482127a3d89d643cafb9268495c2bd0888b72bb4983cb2e5",
                            "typeString": "literal_string \"01302417347\""
                          },
                          "value": "01302417347"
                        },
                        {
                          "hexValue": "3231",
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4759:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          "value": "21"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4790:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_ff5fce97fa06dc4b31d2b4d8004100bdfcd45c4a07bbce0fdf688fecb9a2571d",
                            "typeString": "literal_string \"Monika\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_3fc66cdda73afa97ed1dda1503b8f4dcb1a602e49b30235847dd37d161e0f8f8",
                            "typeString": "literal_string \"Grabowska\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ca58c7bde70d1478482127a3d89d643cafb9268495c2bd0888b72bb4983cb2e5",
                            "typeString": "literal_string \"01302417347\""
                          },
                          {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 342,
                        "name": "Voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "4638:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Voter_$12_storage_ptr_$",
                          "typeString": "type(struct VotingSystem.Voter storage pointer)"
                        }
                      },
                      "id": 348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4658:4:0",
                        "4686:7:0",
                        "4720:5:0",
                        "4754:3:0",
                        "4775:13:0"
                      ],
                      "names": [
                        "name",
                        "surname",
                        "PESEL",
                        "age",
                        "allowedToVote"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4638:167:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_memory_ptr",
                        "typeString": "struct VotingSystem.Voter memory"
                      }
                    },
                    "src": "4614:191:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$12_storage",
                      "typeString": "struct VotingSystem.Voter storage ref"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "4614:191:0"
                },
                {
                  "expression": {
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 351,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "4815:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Voter_$12_storage_$",
                          "typeString": "mapping(string memory => struct VotingSystem.Voter storage ref)"
                        }
                      },
                      "id": 353,
                      "indexExpression": {
                        "hexValue": "3030323231373234343537",
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4822:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6399778575e6f1cfcaa04d25dd300349cd1f07f08ecd642a8666f437638bb5cf",
                          "typeString": "literal_string \"00221724457\""
                        },
                        "value": "00221724457"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4815:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_storage",
                        "typeString": "struct VotingSystem.Voter storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4461726975737a",
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4865:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d27d0720573d5248f7228f871ceadd2c48ae8ebf6f18d99dc09dd485bed9aa5e",
                            "typeString": "literal_string \"Dariusz\""
                          },
                          "value": "Dariusz"
                        },
                        {
                          "hexValue": "44756461",
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4897:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_67b115fab74b974d66c39312131f5928dcc1508e0bf6571a4bb8407fff676730",
                            "typeString": "literal_string \"Duda\""
                          },
                          "value": "Duda"
                        },
                        {
                          "hexValue": "3030323231373234343537",
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4924:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6399778575e6f1cfcaa04d25dd300349cd1f07f08ecd642a8666f437638bb5cf",
                            "typeString": "literal_string \"00221724457\""
                          },
                          "value": "00221724457"
                        },
                        {
                          "hexValue": "3232",
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4956:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_22_by_1",
                            "typeString": "int_const 22"
                          },
                          "value": "22"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4987:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d27d0720573d5248f7228f871ceadd2c48ae8ebf6f18d99dc09dd485bed9aa5e",
                            "typeString": "literal_string \"Dariusz\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_67b115fab74b974d66c39312131f5928dcc1508e0bf6571a4bb8407fff676730",
                            "typeString": "literal_string \"Duda\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6399778575e6f1cfcaa04d25dd300349cd1f07f08ecd642a8666f437638bb5cf",
                            "typeString": "literal_string \"00221724457\""
                          },
                          {
                            "typeIdentifier": "t_rational_22_by_1",
                            "typeString": "int_const 22"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 354,
                        "name": "Voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "4839:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Voter_$12_storage_ptr_$",
                          "typeString": "type(struct VotingSystem.Voter storage pointer)"
                        }
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4859:4:0",
                        "4888:7:0",
                        "4917:5:0",
                        "4951:3:0",
                        "4972:13:0"
                      ],
                      "names": [
                        "name",
                        "surname",
                        "PESEL",
                        "age",
                        "allowedToVote"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4839:163:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_memory_ptr",
                        "typeString": "struct VotingSystem.Voter memory"
                      }
                    },
                    "src": "4815:187:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$12_storage",
                      "typeString": "struct VotingSystem.Voter storage ref"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "4815:187:0"
                },
                {
                  "expression": {
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 363,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "5012:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Voter_$12_storage_$",
                          "typeString": "mapping(string memory => struct VotingSystem.Voter storage ref)"
                        }
                      },
                      "id": 365,
                      "indexExpression": {
                        "hexValue": "3131333031393236343336",
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5019:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f9265a1306d914af9450efeef7ba25157e8991a1d769e733b005f642033f846",
                          "typeString": "literal_string \"11301926436\""
                        },
                        "value": "11301926436"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5012:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_storage",
                        "typeString": "struct VotingSystem.Voter storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4b61726f6c",
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5062:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_fe6b2286e0f5e8c23915157f865f8b41792475b513037c47c1ae85d318804106",
                            "typeString": "literal_string \"Karol\""
                          },
                          "value": "Karol"
                        },
                        {
                          "hexValue": "4e6f77616b",
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5092:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c1f08e28e666ad4afcf47a6e5a3ffaa385ded008a84dc91002d497a56f92f955",
                            "typeString": "literal_string \"Nowak\""
                          },
                          "value": "Nowak"
                        },
                        {
                          "hexValue": "3131333031393236343336",
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5120:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6f9265a1306d914af9450efeef7ba25157e8991a1d769e733b005f642033f846",
                            "typeString": "literal_string \"11301926436\""
                          },
                          "value": "11301926436"
                        },
                        {
                          "hexValue": "3131",
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5152:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_11_by_1",
                            "typeString": "int_const 11"
                          },
                          "value": "11"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5183:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_fe6b2286e0f5e8c23915157f865f8b41792475b513037c47c1ae85d318804106",
                            "typeString": "literal_string \"Karol\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c1f08e28e666ad4afcf47a6e5a3ffaa385ded008a84dc91002d497a56f92f955",
                            "typeString": "literal_string \"Nowak\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6f9265a1306d914af9450efeef7ba25157e8991a1d769e733b005f642033f846",
                            "typeString": "literal_string \"11301926436\""
                          },
                          {
                            "typeIdentifier": "t_rational_11_by_1",
                            "typeString": "int_const 11"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 366,
                        "name": "Voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "5036:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Voter_$12_storage_ptr_$",
                          "typeString": "type(struct VotingSystem.Voter storage pointer)"
                        }
                      },
                      "id": 372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "5056:4:0",
                        "5083:7:0",
                        "5113:5:0",
                        "5147:3:0",
                        "5168:13:0"
                      ],
                      "names": [
                        "name",
                        "surname",
                        "PESEL",
                        "age",
                        "allowedToVote"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5036:163:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_memory_ptr",
                        "typeString": "struct VotingSystem.Voter memory"
                      }
                    },
                    "src": "5012:187:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$12_storage",
                      "typeString": "struct VotingSystem.Voter storage ref"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:187:0"
                }
              ]
            },
            "id": 376,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeVoters",
            "nameLocation": "3585:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3601:2:0"
            },
            "returnParameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3613:0:0"
            },
            "scope": 406,
            "src": "3576:1630:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 404,
              "nodeType": "Block",
              "src": "5342:255:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 388,
                              "name": "stringOne",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 378,
                              "src": "5457:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 386,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5440:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5444:12:0",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "5440:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5440:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 385,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "5430:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5430:38:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 394,
                              "name": "stringTwo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 380,
                              "src": "5511:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 392,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5494:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5498:12:0",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "5494:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5494:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 391,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "5484:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5484:38:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5430:92:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 401,
                  "nodeType": "IfStatement",
                  "src": "5413:156:0",
                  "trueBody": {
                    "id": 400,
                    "nodeType": "Block",
                    "src": "5533:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5554:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 384,
                        "id": 399,
                        "nodeType": "Return",
                        "src": "5547:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5585:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 384,
                  "id": 403,
                  "nodeType": "Return",
                  "src": "5578:12:0"
                }
              ]
            },
            "functionSelector": "b2fd5364",
            "id": 405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTheSameString",
            "nameLocation": "5221:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "stringOne",
                  "nameLocation": "5251:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "5237:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5237:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "stringTwo",
                  "nameLocation": "5276:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "5262:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5262:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5236:50:0"
            },
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 383,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "5332:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5332:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5331:6:0"
            },
            "scope": 406,
            "src": "5212:385:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 407,
        "src": "59:6105:0",
        "usedErrors": []
      }
    ],
    "src": "33:6132:0"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "VotingSystem",
  "coverageMap": {
    "branches": {
      "0": {
        "VotingSystem.isTheSameString": {
          "24": [
            5430,
            5522,
            false
          ]
        },
        "VotingSystem.verifyVoter": {
          "17": [
            1680,
            1727,
            true
          ],
          "18": [
            1830,
            1875,
            true
          ],
          "19": [
            1970,
            2021,
            true
          ],
          "20": [
            2106,
            2128,
            true
          ],
          "21": [
            2191,
            2217,
            true
          ]
        },
        "VotingSystem.vote": {
          "22": [
            1129,
            1141,
            true
          ],
          "23": [
            1196,
            1244,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "VotingSystem.finishElection": {
          "7": [
            2542,
            2562
          ],
          "8": [
            2572,
            2659
          ],
          "9": [
            2669,
            2756
          ],
          "10": [
            2766,
            2853
          ]
        },
        "VotingSystem.isTheSameString": {
          "15": [
            5547,
            5558
          ],
          "16": [
            5578,
            5590
          ]
        },
        "VotingSystem.verifyVoter": {
          "0": [
            1659,
            1799
          ],
          "1": [
            1809,
            1939
          ],
          "2": [
            1949,
            2088
          ],
          "3": [
            2098,
            2160
          ],
          "4": [
            2170,
            2277
          ],
          "5": [
            2287,
            2298
          ]
        },
        "VotingSystem.vote": {
          "11": [
            1121,
            1165
          ],
          "12": [
            1175,
            1305
          ],
          "13": [
            1315,
            1355
          ],
          "14": [
            1365,
            1409
          ]
        },
        "VotingSystem.votesValue": {
          "6": [
            2983,
            3029
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "59:6105:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;503:24;;;;;-1:-1:-1;;;503:24:0;;;;;;;;;179:14:1;;172:22;154:41;;142:2;127:18;503:24:0;;;;;;;;1422:943;;;;;;:::i;:::-;;:::i;534:38::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;469:28::-;;;;;-1:-1:-1;;;;;469:28:0;;;;;;-1:-1:-1;;;;;3549:32:1;;;3531:51;;3519:2;3504:18;469:28:0;3385:203:1;2866:170:0;;;;;;:::i;:::-;;:::i;:::-;;;3739:25:1;;;3727:2;3712:18;2866:170:0;3593:177:1;2489:371:0;;;:::i;:::-;;749:35;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;944:472::-;;;;;;:::i;:::-;;:::i;5212:385::-;;;;;;:::i;:::-;;:::i;663:46::-;;;;;;:::i;:::-;;:::i;1422:943::-;1573:18;1603:25;1631:6;1638:10;1631:18;;;;;;:::i;:::-;;;;;;;;;;;;;1603:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1603:46:0;;;-1:-1:-1;;1603:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;1696:18;;;;;-1:-1:-1;1680:47:0;;1716:10;1680:15;:47::i;:::-;1659:140;;;;-1:-1:-1;;;1659:140:0;;6634:2:1;1659:140:0;;;6616:21:1;6673:2;6653:18;;;6646:30;6712:34;6692:18;;;6685:62;-1:-1:-1;;;6763:18:1;;;6756:44;6817:19;;1659:140:0;;;;;;;;;1846:17;;1830:45;;1865:9;1830:15;:45::i;:::-;1809:130;;;;-1:-1:-1;;;1809:130:0;;7049:2:1;1809:130:0;;;7031:21:1;7088:2;7068:18;;;7061:30;7127:34;7107:18;;;7100:62;-1:-1:-1;;;7178:18:1;;;7171:36;7224:19;;1809:130:0;6847:402:1;1809:130:0;1970:51;1986:12;:20;;;2008:12;1970:15;:51::i;:::-;1949:139;;;;-1:-1:-1;;;1949:139:0;;7456:2:1;1949:139:0;;;7438:21:1;7495:2;7475:18;;;7468:30;7534:34;7514:18;;;7507:62;-1:-1:-1;;;7585:18:1;;;7578:39;7634:19;;1949:139:0;7254:405:1;1949:139:0;2126:2;2106:12;:16;;;:22;;;;2098:62;;;;-1:-1:-1;;;2098:62:0;;7866:2:1;2098:62:0;;;7848:21:1;7905:2;7885:18;;;7878:30;7944:29;7924:18;;;7917:57;7991:18;;2098:62:0;7664:351:1;2098:62:0;2191:12;:26;;;2170:107;;;;-1:-1:-1;;;2170:107:0;;8222:2:1;2170:107:0;;;8204:21:1;8261:2;8241:18;;;8234:30;8300:34;8280:18;;;8273:62;-1:-1:-1;;;8351:18:1;;;8344:32;8393:19;;2170:107:0;8020:398:1;2170:107:0;-1:-1:-1;2294:4:0;;1422:943;-1:-1:-1;;;;1422:943:0:o;534:38::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;534:38:0;;;;;;;-1:-1:-1;;534:38:0;;;;;;;;;;;;:::o;2866:170::-;2960:7;2990:10;3001:13;2990:25;;;;;;:::i;:::-;;;;;;;;;;;;;:39;;;2983:46;;2866:170;;;:::o;2489:371::-;2424:13;;-1:-1:-1;;;;;2424:13:0;2410:10;:27;2402:63;;;;-1:-1:-1;;;2402:63:0;;8625:2:1;2402:63:0;;;8607:21:1;8664:2;8644:18;;;8637:30;8703:25;8683:18;;;8676:53;8746:18;;2402:63:0;8423:347:1;2402:63:0;2557:5:::1;2542:20:::0;;-1:-1:-1;;;;2542:20:0::1;::::0;;2608:24:::1;::::0;-1:-1:-1;;;8977:25:1;;2608:10:0::1;::::0;9027:2:1;9018:12;2608:24:0::1;;;;;;;;;;;;:51;;;2572:16;2589:1;2572:19;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;:87;;;;2705:10;:24;;;;-1:-1:-1::0;;;9375:25:1;;9425:2;9416:12;;9173:261;2705:24:0::1;;;;;;;;;;;;;:51;;;2669:16;2686:1;2669:19;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;:87;;;;2802:10;:24;;;;-1:-1:-1::0;;;9641:25:1;;9691:2;9682:12;;9439:261;2802:24:0::1;;;;;;;;;;;;;:51;;;2766:16;2783:1;2766:19;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;:87;;;;2489:371::o:0;749:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;944:472::-;1129:12;;-1:-1:-1;;;1129:12:0;;;;1121:44;;;;-1:-1:-1;;;1121:44:0;;9907:2:1;1121:44:0;;;9889:21:1;9946:2;9926:18;;;9919:30;-1:-1:-1;;;9965:18:1;;;9958:49;10024:18;;1121:44:0;9705:343:1;1121:44:0;1196:48;1208:9;1219:12;1233:10;1196:11;:48::i;:::-;1175:130;;;;-1:-1:-1;;;1175:130:0;;10255:2:1;1175:130:0;;;10237:21:1;10294:2;10274:18;;;10267:30;10333:34;10313:18;;;10306:62;-1:-1:-1;;;10384:18:1;;;10377:33;10427:19;;1175:130:0;10053:399:1;1175:130:0;1350:5;1315:6;1322:10;1315:18;;;;;;:::i;:::-;;;;;;;;;;;;;:32;;;:40;;;;;;;;;;;;;;;;;;1408:1;1365:10;1376:13;1365:25;;;;;;:::i;:::-;;;;;;;;;;;;;:39;;;:44;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;944:472:0:o;5212:385::-;5332:4;5511:9;5494:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;5484:38;;;;;;5457:9;5440:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;5430:38;;;;;;:92;5413:156;;-1:-1:-1;5554:4:0;5547:11;;5413:156;-1:-1:-1;5585:5:0;5212:385;;;;;:::o;663:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;206:127:1:-;267:10;262:3;258:20;255:1;248:31;298:4;295:1;288:15;322:4;319:1;312:15;338:719;381:5;434:3;427:4;419:6;415:17;411:27;401:55;;452:1;449;442:12;401:55;488:6;475:20;514:18;551:2;547;544:10;541:36;;;557:18;;:::i;:::-;632:2;626:9;600:2;686:13;;-1:-1:-1;;682:22:1;;;706:2;678:31;674:40;662:53;;;730:18;;;750:22;;;727:46;724:72;;;776:18;;:::i;:::-;816:10;812:2;805:22;851:2;843:6;836:18;897:3;890:4;885:2;877:6;873:15;869:26;866:35;863:55;;;914:1;911;904:12;863:55;978:2;971:4;963:6;959:17;952:4;944:6;940:17;927:54;1025:1;1018:4;1013:2;1005:6;1001:15;997:26;990:37;1045:6;1036:15;;;;;;338:719;;;;:::o;1062:743::-;1169:6;1177;1185;1238:2;1226:9;1217:7;1213:23;1209:32;1206:52;;;1254:1;1251;1244:12;1206:52;1294:9;1281:23;1323:18;1364:2;1356:6;1353:14;1350:34;;;1380:1;1377;1370:12;1350:34;1403:50;1445:7;1436:6;1425:9;1421:22;1403:50;:::i;:::-;1393:60;;1506:2;1495:9;1491:18;1478:32;1462:48;;1535:2;1525:8;1522:16;1519:36;;;1551:1;1548;1541:12;1519:36;1574:52;1618:7;1607:8;1596:9;1592:24;1574:52;:::i;:::-;1564:62;;1679:2;1668:9;1664:18;1651:32;1635:48;;1708:2;1698:8;1695:16;1692:36;;;1724:1;1721;1714:12;1692:36;;1747:52;1791:7;1780:8;1769:9;1765:24;1747:52;:::i;:::-;1737:62;;;1062:743;;;;;:::o;1810:322::-;1879:6;1932:2;1920:9;1911:7;1907:23;1903:32;1900:52;;;1948:1;1945;1938:12;1900:52;1988:9;1975:23;2021:18;2013:6;2010:30;2007:50;;;2053:1;2050;2043:12;2007:50;2076;2118:7;2109:6;2098:9;2094:22;2076:50;:::i;:::-;2066:60;1810:322;-1:-1:-1;;;;1810:322:1:o;2137:250::-;2222:1;2232:113;2246:6;2243:1;2240:13;2232:113;;;2322:11;;;2316:18;2303:11;;;2296:39;2268:2;2261:10;2232:113;;;-1:-1:-1;;2379:1:1;2361:16;;2354:27;2137:250::o;2392:271::-;2434:3;2472:5;2466:12;2499:6;2494:3;2487:19;2515:76;2584:6;2577:4;2572:3;2568:14;2561:4;2554:5;2550:16;2515:76;:::i;:::-;2645:2;2624:15;-1:-1:-1;;2620:29:1;2611:39;;;;2652:4;2607:50;;2392:271;-1:-1:-1;;2392:271:1:o;2668:712::-;2959:3;2948:9;2941:22;2922:4;2986:46;3027:3;3016:9;3012:19;3004:6;2986:46;:::i;:::-;3080:9;3072:6;3068:22;3063:2;3052:9;3048:18;3041:50;3114:33;3140:6;3132;3114:33;:::i;:::-;3100:47;;3195:9;3187:6;3183:22;3178:2;3167:9;3163:18;3156:50;3223:33;3249:6;3241;3223:33;:::i;:::-;3303:1;3292:21;;;;3287:2;3272:18;;3265:49;-1:-1:-1;;3358:14:1;;3351:22;3345:3;3330:19;;;3323:51;3215:41;2668:712;-1:-1:-1;;;2668:712:1:o;3775:180::-;3834:6;3887:2;3875:9;3866:7;3862:23;3858:32;3855:52;;;3903:1;3900;3893:12;3855:52;-1:-1:-1;3926:23:1;;3775:180;-1:-1:-1;3775:180:1:o;3960:291::-;4137:2;4126:9;4119:21;4100:4;4157:45;4198:2;4187:9;4183:18;4175:6;4157:45;:::i;:::-;4149:53;;4238:6;4233:2;4222:9;4218:18;4211:34;3960:291;;;;;:::o;4256:944::-;4382:6;4390;4398;4406;4459:3;4447:9;4438:7;4434:23;4430:33;4427:53;;;4476:1;4473;4466:12;4427:53;4516:9;4503:23;4545:18;4586:2;4578:6;4575:14;4572:34;;;4602:1;4599;4592:12;4572:34;4625:50;4667:7;4658:6;4647:9;4643:22;4625:50;:::i;:::-;4615:60;;4728:2;4717:9;4713:18;4700:32;4684:48;;4757:2;4747:8;4744:16;4741:36;;;4773:1;4770;4763:12;4741:36;4796:52;4840:7;4829:8;4818:9;4814:24;4796:52;:::i;:::-;4786:62;;4901:2;4890:9;4886:18;4873:32;4857:48;;4930:2;4920:8;4917:16;4914:36;;;4946:1;4943;4936:12;4914:36;4969:52;5013:7;5002:8;4991:9;4987:24;4969:52;:::i;:::-;4959:62;;5074:2;5063:9;5059:18;5046:32;5030:48;;5103:2;5093:8;5090:16;5087:36;;;5119:1;5116;5109:12;5087:36;;5142:52;5186:7;5175:8;5164:9;5160:24;5142:52;:::i;:::-;5132:62;;;4256:944;;;;;;;:::o;5205:543::-;5293:6;5301;5354:2;5342:9;5333:7;5329:23;5325:32;5322:52;;;5370:1;5367;5360:12;5322:52;5410:9;5397:23;5439:18;5480:2;5472:6;5469:14;5466:34;;;5496:1;5493;5486:12;5466:34;5519:50;5561:7;5552:6;5541:9;5537:22;5519:50;:::i;:::-;5509:60;;5622:2;5611:9;5607:18;5594:32;5578:48;;5651:2;5641:8;5638:16;5635:36;;;5667:1;5664;5657:12;5635:36;;5690:52;5734:7;5723:8;5712:9;5708:24;5690:52;:::i;:::-;5680:62;;;5205:543;;;;;:::o;5753:289::-;5884:3;5922:6;5916:13;5938:66;5997:6;5992:3;5985:4;5977:6;5973:17;5938:66;:::i;:::-;6020:16;;;;;5753:289;-1:-1:-1;;5753:289:1:o;6047:380::-;6126:1;6122:12;;;;6169;;;6190:61;;6244:4;6236:6;6232:17;6222:27;;6190:61;6297:2;6289:6;6286:14;6266:18;6263:38;6260:161;;6343:10;6338:3;6334:20;6331:1;6324:31;6378:4;6375:1;6368:15;6406:4;6403:1;6396:15;6260:161;;6047:380;;;:::o;9041:127::-;9102:10;9097:3;9093:20;9090:1;9083:31;9133:4;9130:1;9123:15;9157:4;9154:1;9147:15;10457:222;10522:9;;;10543:10;;;10540:133;;;10595:10;10590:3;10586:20;10583:1;10576:31;10630:4;10627:1;10620:15;10658:4;10655:1;10648:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    59,
    6164
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90173864 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x90173864 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x92D7DF4A EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x9B3BC156 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xB2FD5364 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xC5539CC2 EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4A39D442 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x4F834F1C EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x53FA2E64 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x65E0647D EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x8871D5BB EQ PUSH2 0x12E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xB7 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0xCD4 JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x116 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0xCD4 JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x7C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP3 SWAP2 SWAP1 PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF2 JUMP JUMPDEST PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0xB7 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xE9F JUMP JUMPDEST PUSH2 0xB1C JUMP JUMPDEST PUSH2 0x16C PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0xCD4 JUMP JUMPDEST PUSH2 0xB83 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x1EF SWAP1 PUSH2 0xF1F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0xF1F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x268 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x268 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x24B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x281 SWAP1 PUSH2 0xF1F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AD SWAP1 PUSH2 0xF1F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x313 SWAP1 PUSH2 0xF1F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33F SWAP1 PUSH2 0xF1F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x38C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x361 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x38C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 DUP2 SWAP1 SIGNEXTEND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP2 DUP3 ADD MSTORE DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x3C6 SWAP1 DUP5 PUSH2 0xB1C JUMP JUMPDEST PUSH2 0x42E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320706572736F6E20646F65736E27742065786973747320696E20766F PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x7465727320646174616261736521 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x43A SWAP1 DUP7 PUSH2 0xB1C JUMP JUMPDEST PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206E616D65206F662074686520706572736F6E206973206E6F7420636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x727265637421 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x425 JUMP JUMPDEST PUSH2 0x4A3 DUP2 PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0xB1C JUMP JUMPDEST PUSH2 0x501 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865207375726E616D65206F662074686520706572736F6E206973206E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x20636F727265637421 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x425 JUMP JUMPDEST PUSH1 0x12 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x1 SIGNEXTEND SLT ISZERO PUSH2 0x559 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520706572736F6E206973206E6F7420616E206164756C74210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x425 JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520706572736F6E206973206E6F7420616C6C6F77656420746F20766F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6521 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x425 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x1 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP2 SWAP1 PUSH2 0x5E6 SWAP1 PUSH2 0xF1F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x612 SWAP1 PUSH2 0xF1F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x65F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x634 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x65F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x642 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x674 SWAP1 PUSH2 0xF1F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6A0 SWAP1 PUSH2 0xF1F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x702 SWAP1 PUSH2 0xF1F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x72E SWAP1 PUSH2 0xF1F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x77B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x750 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x77B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x75E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0x1 DUP2 SWAP1 SIGNEXTEND SWAP1 PUSH1 0xFF PUSH3 0x10000 SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742074686520636F6E7472616374206F776E657221000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x425 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH10 0x4B616E64796461742031 PUSH1 0xB0 SHL DUP2 MSTORE PUSH1 0x2 SWAP1 PUSH1 0xA ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x86C JUMPI PUSH2 0x86C PUSH2 0xF59 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x40 MLOAD PUSH2 0x8A0 SWAP1 PUSH10 0x25B0B7323CB230BA1019 PUSH1 0xB1 SHL DUP2 MSTORE PUSH1 0xA ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x3 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x8C6 JUMPI PUSH2 0x8C6 PUSH2 0xF59 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x40 MLOAD PUSH2 0x8FA SWAP1 PUSH10 0x4B616E64796461742033 PUSH1 0xB0 SHL DUP2 MSTORE PUSH1 0xA ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x3 PUSH1 0x2 DUP2 SLOAD DUP2 LT PUSH2 0x920 JUMPI PUSH2 0x920 PUSH2 0xF59 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x96A SWAP1 PUSH2 0xF1F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x996 SWAP1 PUSH2 0xF1F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x456C656374696F6E20697320636C6F73656421 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x425 JUMP JUMPDEST PUSH2 0xA4D DUP5 DUP5 DUP5 PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0xAA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746572206469646E27742066756C66696C6C7320726571756972656D656E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x747321 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x425 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x3 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0xAF1 SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0xF6F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB2F SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0xB79 JUMPI POP PUSH1 0x1 PUSH2 0xB7D JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x2 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP2 SWAP1 PUSH2 0x96A SWAP1 PUSH2 0xF1F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEB PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC13 JUMPI PUSH2 0xC13 PUSH2 0xBA9 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xC2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC85 DUP8 DUP4 DUP9 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xC9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA7 DUP8 DUP4 DUP9 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xCBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCCA DUP7 DUP3 DUP8 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD09 DUP5 DUP3 DUP6 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD2C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD14 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD4D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0xD74 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0xD35 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xD86 DUP2 DUP9 PUSH2 0xD35 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xD9A DUP2 DUP8 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x1 SWAP6 SWAP1 SWAP6 SIGNEXTEND PUSH1 0x60 DUP5 ADD MSTORE POP POP SWAP1 ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0xDE3 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xD35 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2C DUP9 DUP4 DUP10 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4E DUP9 DUP4 DUP10 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE70 DUP9 DUP4 DUP10 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE93 DUP8 DUP3 DUP9 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xECA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED6 DUP7 DUP4 DUP8 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xEEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF9 DUP6 DUP3 DUP7 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xF15 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xD11 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF33 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF53 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xB7D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xF6 CALLCODE PUSH29 0x905B6EA6B2700D528DB931D1EF70211D33D74E3DF05C7BC0868676DE64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        59,
        6164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x90173864"
    },
    "38": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x90173864"
    },
    "49": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "53": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x92D7DF4A"
    },
    "60": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159"
    },
    "64": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9B3BC156"
    },
    "71": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17A"
    },
    "75": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB2FD5364"
    },
    "82": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18D"
    },
    "86": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC5539CC2"
    },
    "93": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "97": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4A39D442"
    },
    "109": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4F834F1C"
    },
    "120": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "124": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x53FA2E64"
    },
    "131": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF"
    },
    "135": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x65E0647D"
    },
    "142": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "146": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8871D5BB"
    },
    "153": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "157": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        59,
        6164
      ],
      "op": "REVERT",
      "path": "0"
    },
    "163": {
      "offset": [
        503,
        527
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "166": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "167": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7"
    },
    "170": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "175": {
      "op": "SHL"
    },
    "176": {
      "offset": [
        503,
        527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "177": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "DIV",
      "path": "0"
    },
    "178": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "180": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "AND",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "182": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "JUMP",
      "path": "0"
    },
    "183": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "184": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "186": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "187": {
      "op": "SWAP1"
    },
    "188": {
      "op": "ISZERO"
    },
    "189": {
      "op": "ISZERO"
    },
    "190": {
      "op": "DUP2"
    },
    "191": {
      "op": "MSTORE"
    },
    "192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "194": {
      "op": "ADD"
    },
    "195": {
      "offset": [
        503,
        527
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "198": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "200": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "SUB",
      "path": "0"
    },
    "202": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        503,
        527
      ],
      "op": "RETURN",
      "path": "0"
    },
    "204": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1422,
        2365
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "205": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1422,
        2365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7"
    },
    "208": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1422,
        2365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA"
    },
    "211": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1422,
        2365
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "212": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1422,
        2365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "214": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1422,
        2365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC4C"
    },
    "217": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        1422,
        2365
      ],
      "op": "JUMP",
      "path": "0"
    },
    "218": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1422,
        2365
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "219": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1422,
        2365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B3"
    },
    "222": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        1422,
        2365
      ],
      "op": "JUMP",
      "path": "0"
    },
    "223": {
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "224": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "227": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED"
    },
    "230": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "231": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "233": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD4"
    },
    "236": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        534,
        572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "237": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "238": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C0"
    },
    "241": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        534,
        572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "242": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "243": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "245": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "246": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "249": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "250": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "251": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "252": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "253": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "254": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "255": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD61"
    },
    "258": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        534,
        572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "259": {
      "offset": [
        469,
        497
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "260": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        469,
        497
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "262": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        469,
        497
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "263": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        469,
        497
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x116"
    },
    "266": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        469,
        497
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "273": {
      "op": "SHL"
    },
    "274": {
      "op": "SUB"
    },
    "275": {
      "offset": [
        469,
        497
      ],
      "op": "AND",
      "path": "0"
    },
    "276": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        469,
        497
      ],
      "op": "DUP2",
      "path": "0"
    },
    "277": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        469,
        497
      ],
      "op": "JUMP",
      "path": "0"
    },
    "278": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        469,
        497
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "279": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        469,
        497
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "281": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        469,
        497
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "288": {
      "op": "SHL"
    },
    "289": {
      "op": "SUB"
    },
    "290": {
      "op": "SWAP1"
    },
    "291": {
      "op": "SWAP2"
    },
    "292": {
      "op": "AND"
    },
    "293": {
      "op": "DUP2"
    },
    "294": {
      "op": "MSTORE"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "297": {
      "op": "ADD"
    },
    "298": {
      "offset": [
        469,
        497
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "301": {
      "op": "JUMP"
    },
    "302": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2866,
        3036
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "303": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2866,
        3036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141"
    },
    "306": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2866,
        3036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C"
    },
    "309": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2866,
        3036
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "310": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2866,
        3036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "312": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2866,
        3036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD4"
    },
    "315": {
      "fn": "VotingSystem.votesValue",
      "jump": "i",
      "offset": [
        2866,
        3036
      ],
      "op": "JUMP",
      "path": "0"
    },
    "316": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2866,
        3036
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "317": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2866,
        3036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79B"
    },
    "320": {
      "fn": "VotingSystem.votesValue",
      "jump": "i",
      "offset": [
        2866,
        3036
      ],
      "op": "JUMP",
      "path": "0"
    },
    "321": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2866,
        3036
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "322": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2866,
        3036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "324": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2866,
        3036
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "325": {
      "op": "SWAP1"
    },
    "326": {
      "op": "DUP2"
    },
    "327": {
      "op": "MSTORE"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "330": {
      "op": "ADD"
    },
    "331": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2866,
        3036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "334": {
      "op": "JUMP"
    },
    "335": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2489,
        2860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "336": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2489,
        2860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x157"
    },
    "339": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2489,
        2860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C6"
    },
    "342": {
      "fn": "VotingSystem.finishElection",
      "jump": "i",
      "offset": [
        2489,
        2860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "343": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2489,
        2860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "344": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2489,
        2860
      ],
      "op": "STOP",
      "path": "0"
    },
    "345": {
      "offset": [
        749,
        784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "346": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16C"
    },
    "349": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x167"
    },
    "352": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "353": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "355": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB7"
    },
    "358": {
      "fn": "VotingSystem.finishElection",
      "jump": "i",
      "offset": [
        749,
        784
      ],
      "op": "JUMP",
      "path": "0"
    },
    "359": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "360": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x937"
    },
    "363": {
      "fn": "VotingSystem.finishElection",
      "jump": "i",
      "offset": [
        749,
        784
      ],
      "op": "JUMP",
      "path": "0"
    },
    "364": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "365": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "367": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "368": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "371": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "372": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "373": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "374": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD0"
    },
    "377": {
      "fn": "VotingSystem.finishElection",
      "jump": "i",
      "offset": [
        749,
        784
      ],
      "op": "JUMP",
      "path": "0"
    },
    "378": {
      "fn": "VotingSystem.vote",
      "offset": [
        944,
        1416
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "379": {
      "fn": "VotingSystem.vote",
      "offset": [
        944,
        1416
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x157"
    },
    "382": {
      "fn": "VotingSystem.vote",
      "offset": [
        944,
        1416
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x188"
    },
    "385": {
      "fn": "VotingSystem.vote",
      "offset": [
        944,
        1416
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "386": {
      "fn": "VotingSystem.vote",
      "offset": [
        944,
        1416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "388": {
      "fn": "VotingSystem.vote",
      "offset": [
        944,
        1416
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF2"
    },
    "391": {
      "fn": "VotingSystem.vote",
      "jump": "i",
      "offset": [
        944,
        1416
      ],
      "op": "JUMP",
      "path": "0"
    },
    "392": {
      "fn": "VotingSystem.vote",
      "offset": [
        944,
        1416
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "393": {
      "fn": "VotingSystem.vote",
      "offset": [
        944,
        1416
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F3"
    },
    "396": {
      "fn": "VotingSystem.vote",
      "jump": "i",
      "offset": [
        944,
        1416
      ],
      "op": "JUMP",
      "path": "0"
    },
    "397": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5212,
        5597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "398": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5212,
        5597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7"
    },
    "401": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5212,
        5597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B"
    },
    "404": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5212,
        5597
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "405": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5212,
        5597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "407": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5212,
        5597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE9F"
    },
    "410": {
      "fn": "VotingSystem.isTheSameString",
      "jump": "i",
      "offset": [
        5212,
        5597
      ],
      "op": "JUMP",
      "path": "0"
    },
    "411": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5212,
        5597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "412": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5212,
        5597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1C"
    },
    "415": {
      "fn": "VotingSystem.isTheSameString",
      "jump": "i",
      "offset": [
        5212,
        5597
      ],
      "op": "JUMP",
      "path": "0"
    },
    "416": {
      "offset": [
        663,
        709
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "417": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16C"
    },
    "420": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AE"
    },
    "423": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "424": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "426": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD4"
    },
    "429": {
      "fn": "VotingSystem.isTheSameString",
      "jump": "i",
      "offset": [
        663,
        709
      ],
      "op": "JUMP",
      "path": "0"
    },
    "430": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "431": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB83"
    },
    "434": {
      "fn": "VotingSystem.isTheSameString",
      "jump": "i",
      "offset": [
        663,
        709
      ],
      "op": "JUMP",
      "path": "0"
    },
    "435": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1422,
        2365
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "436": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1573,
        1591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "438": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1628
      ],
      "op": "DUP1",
      "path": "0"
    },
    "439": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "441": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1638,
        1648
      ],
      "op": "DUP4",
      "path": "0"
    },
    "442": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "444": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "445": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6"
    },
    "448": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "449": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "450": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF03"
    },
    "453": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        1631,
        1649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "454": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "455": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "456": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "457": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "458": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "460": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "461": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "463": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "464": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "465": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "466": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "SUB",
      "path": "0"
    },
    "467": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "468": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1631,
        1649
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "469": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "471": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "472": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "473": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "475": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "476": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "478": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "479": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "480": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "481": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "483": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "484": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "485": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "486": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "487": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF"
    },
    "490": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "491": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "494": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "495": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "496": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "497": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "499": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "500": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "502": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "503": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "504": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DIV",
      "path": "0"
    },
    "505": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MUL",
      "path": "0"
    },
    "506": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "508": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "509": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "511": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "512": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "513": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "514": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "515": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "517": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "518": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "519": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "520": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "521": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "522": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "523": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "524": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "525": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "527": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "528": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "529": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "530": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "531": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "534": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "535": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "538": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "539": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "540": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "541": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "542": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "545": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "546": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "547": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "549": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "LT",
      "path": "0"
    },
    "550": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23D"
    },
    "553": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "554": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "557": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "558": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP4",
      "path": "0"
    },
    "559": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "560": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DIV",
      "path": "0"
    },
    "561": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MUL",
      "path": "0"
    },
    "562": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP4",
      "path": "0"
    },
    "563": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "564": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "565": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "567": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "568": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "569": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "572": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "573": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "574": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "575": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "576": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "577": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "578": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "580": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "581": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "583": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "585": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "586": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "587": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "588": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "589": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "590": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "591": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "592": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "593": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "595": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "596": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "597": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "599": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "600": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "601": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP4",
      "path": "0"
    },
    "602": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "GT",
      "path": "0"
    },
    "603": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24B"
    },
    "606": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "607": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "608": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "609": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SUB",
      "path": "0"
    },
    "610": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "612": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "AND",
      "path": "0"
    },
    "613": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "614": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "615": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "616": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "617": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "POP",
      "path": "0"
    },
    "618": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "POP",
      "path": "0"
    },
    "619": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "POP",
      "path": "0"
    },
    "620": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "POP",
      "path": "0"
    },
    "621": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "POP",
      "path": "0"
    },
    "622": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "623": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "624": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "626": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "627": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "629": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "630": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "631": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "632": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "633": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x281"
    },
    "636": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "637": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "640": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "641": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "642": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "643": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "645": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "646": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "648": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "649": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "650": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DIV",
      "path": "0"
    },
    "651": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MUL",
      "path": "0"
    },
    "652": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "654": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "655": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "657": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "658": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "659": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "660": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "661": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "663": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "664": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "665": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "666": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "667": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "668": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "669": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "670": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "671": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "673": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "674": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "675": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "676": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "677": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AD"
    },
    "680": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "681": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "684": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "685": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "686": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "687": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "688": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FA"
    },
    "691": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "692": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "693": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "695": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "LT",
      "path": "0"
    },
    "696": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF"
    },
    "699": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "700": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "703": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "704": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP4",
      "path": "0"
    },
    "705": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "706": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DIV",
      "path": "0"
    },
    "707": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MUL",
      "path": "0"
    },
    "708": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP4",
      "path": "0"
    },
    "709": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "710": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "711": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "713": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "714": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "715": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FA"
    },
    "718": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "719": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "720": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "721": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "722": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "723": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "724": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "726": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "727": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "729": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "731": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "732": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "733": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "734": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "735": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "736": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "737": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "738": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "739": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "741": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "742": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "743": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "745": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "746": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "747": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP4",
      "path": "0"
    },
    "748": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "GT",
      "path": "0"
    },
    "749": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DD"
    },
    "752": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "753": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "754": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "755": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SUB",
      "path": "0"
    },
    "756": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "758": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "AND",
      "path": "0"
    },
    "759": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "760": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "761": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "762": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "763": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "POP",
      "path": "0"
    },
    "764": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "POP",
      "path": "0"
    },
    "765": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "POP",
      "path": "0"
    },
    "766": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "POP",
      "path": "0"
    },
    "767": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "POP",
      "path": "0"
    },
    "768": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "769": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "770": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "772": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "773": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "775": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "776": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "777": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "778": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "779": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x313"
    },
    "782": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "783": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "786": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "787": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "788": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "789": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "791": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "792": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "794": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "795": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "796": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DIV",
      "path": "0"
    },
    "797": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MUL",
      "path": "0"
    },
    "798": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "800": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "801": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "803": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "804": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "805": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "806": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "807": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "809": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "810": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "811": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "812": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "813": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "814": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "815": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "816": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "817": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "819": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "820": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "821": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "822": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "823": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33F"
    },
    "826": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "827": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "830": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "831": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "832": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "833": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "834": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38C"
    },
    "837": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "838": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "839": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "841": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "LT",
      "path": "0"
    },
    "842": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x361"
    },
    "845": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "846": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "849": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "850": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP4",
      "path": "0"
    },
    "851": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "852": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DIV",
      "path": "0"
    },
    "853": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MUL",
      "path": "0"
    },
    "854": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP4",
      "path": "0"
    },
    "855": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "856": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "857": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "859": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "860": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "861": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38C"
    },
    "864": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "865": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "866": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "867": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "868": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "869": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "870": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "872": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "873": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "875": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "877": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "878": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "879": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "880": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "881": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "882": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "883": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "884": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "885": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "887": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "888": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "889": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "891": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "892": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "893": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP4",
      "path": "0"
    },
    "894": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "GT",
      "path": "0"
    },
    "895": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36F"
    },
    "898": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "899": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "900": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "901": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SUB",
      "path": "0"
    },
    "902": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "904": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "AND",
      "path": "0"
    },
    "905": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "906": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "907": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "908": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "909": {
      "op": "POP"
    },
    "910": {
      "op": "POP"
    },
    "911": {
      "op": "POP"
    },
    "912": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "913": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP4",
      "path": "0"
    },
    "914": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "915": {
      "op": "POP"
    },
    "916": {
      "op": "POP"
    },
    "917": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "919": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "920": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "921": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "922": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "923": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "924": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "926": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "927": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "928": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SIGNEXTEND",
      "path": "0"
    },
    "929": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "931": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP4",
      "path": "0"
    },
    "932": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "933": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "934": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "938": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "939": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DIV",
      "path": "0"
    },
    "940": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "942": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "AND",
      "path": "0"
    },
    "943": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "944": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "945": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "947": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "948": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "949": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "ADD",
      "path": "0"
    },
    "950": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1603,
        1649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "951": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1696,
        1714
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 0
    },
    "952": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1696,
        1714
      ],
      "op": "ADD",
      "path": "0"
    },
    "953": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1696,
        1714
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "954": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1696,
        1714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "955": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1696,
        1714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "956": {
      "op": "POP"
    },
    "957": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1680,
        1727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C6"
    },
    "960": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1680,
        1727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "961": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1716,
        1726
      ],
      "op": "DUP5",
      "path": "0"
    },
    "962": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1680,
        1695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1C"
    },
    "965": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        1680,
        1727
      ],
      "op": "JUMP",
      "path": "0"
    },
    "966": {
      "branch": 17,
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1680,
        1727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "967": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42E"
    },
    "970": {
      "branch": 17,
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "971": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "973": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "974": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "978": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "980": {
      "op": "SHL"
    },
    "981": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "DUP2",
      "path": "0"
    },
    "982": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "985": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "987": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "DUP3",
      "path": "0"
    },
    "988": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "ADD",
      "path": "0"
    },
    "989": {
      "op": "MSTORE"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "994": {
      "op": "DUP3"
    },
    "995": {
      "op": "ADD"
    },
    "996": {
      "op": "MSTORE"
    },
    "997": {
      "op": "PUSH32",
      "value": "0x5468697320706572736F6E20646F65736E27742065786973747320696E20766F"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1032": {
      "op": "DUP3"
    },
    "1033": {
      "op": "ADD"
    },
    "1034": {
      "op": "MSTORE"
    },
    "1035": {
      "op": "PUSH14",
      "value": "0x7465727320646174616261736521"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "1052": {
      "op": "SHL"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1055": {
      "op": "DUP3"
    },
    "1056": {
      "op": "ADD"
    },
    "1057": {
      "op": "MSTORE"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1060": {
      "op": "ADD"
    },
    "1061": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1062": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1064": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1065": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1066": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1067": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "SUB",
      "path": "0"
    },
    "1068": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1069": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1070": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1659,
        1799
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1071": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1846,
        1863
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 1
    },
    "1072": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1846,
        1863
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1073": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1830,
        1875
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43A"
    },
    "1076": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1830,
        1875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1077": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1865,
        1874
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1078": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1830,
        1845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1C"
    },
    "1081": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        1830,
        1875
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1082": {
      "branch": 18,
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1830,
        1875
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1083": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1809,
        1939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x495"
    },
    "1086": {
      "branch": 18,
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1809,
        1939
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1087": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1809,
        1939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1089": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1809,
        1939
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1090": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1809,
        1939
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1098": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1809,
        1939
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1101": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1809,
        1939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1103": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1809,
        1939
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1104": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1809,
        1939
      ],
      "op": "ADD",
      "path": "0"
    },
    "1105": {
      "op": "MSTORE"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1110": {
      "op": "DUP3"
    },
    "1111": {
      "op": "ADD"
    },
    "1112": {
      "op": "MSTORE"
    },
    "1113": {
      "op": "PUSH32",
      "value": "0x546865206E616D65206F662074686520706572736F6E206973206E6F7420636F"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1148": {
      "op": "DUP3"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "op": "PUSH6",
      "value": "0x727265637421"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1160": {
      "op": "SHL"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1163": {
      "op": "DUP3"
    },
    "1164": {
      "op": "ADD"
    },
    "1165": {
      "op": "MSTORE"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1168": {
      "op": "ADD"
    },
    "1169": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1809,
        1939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x425"
    },
    "1172": {
      "op": "JUMP"
    },
    "1173": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1809,
        1939
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1174": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1970,
        2021
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 2,
      "value": "0x4A3"
    },
    "1177": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1986,
        1998
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1178": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1986,
        2006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1180": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1986,
        2006
      ],
      "op": "ADD",
      "path": "0"
    },
    "1181": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1986,
        2006
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1182": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2008,
        2020
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1183": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1970,
        1985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1C"
    },
    "1186": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        1970,
        2021
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1187": {
      "branch": 19,
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1970,
        2021
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1188": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1949,
        2088
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x501"
    },
    "1191": {
      "branch": 19,
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1949,
        2088
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1192": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1949,
        2088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1194": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1949,
        2088
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1195": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1201": {
      "op": "SHL"
    },
    "1202": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1949,
        2088
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1203": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1949,
        2088
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1206": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1949,
        2088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1208": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1949,
        2088
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1209": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1949,
        2088
      ],
      "op": "ADD",
      "path": "0"
    },
    "1210": {
      "op": "MSTORE"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1215": {
      "op": "DUP3"
    },
    "1216": {
      "op": "ADD"
    },
    "1217": {
      "op": "MSTORE"
    },
    "1218": {
      "op": "PUSH32",
      "value": "0x546865207375726E616D65206F662074686520706572736F6E206973206E6F74"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1253": {
      "op": "DUP3"
    },
    "1254": {
      "op": "ADD"
    },
    "1255": {
      "op": "MSTORE"
    },
    "1256": {
      "op": "PUSH9",
      "value": "0x20636F727265637421"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1268": {
      "op": "SHL"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1271": {
      "op": "DUP3"
    },
    "1272": {
      "op": "ADD"
    },
    "1273": {
      "op": "MSTORE"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1276": {
      "op": "ADD"
    },
    "1277": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1949,
        2088
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x425"
    },
    "1280": {
      "op": "JUMP"
    },
    "1281": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1949,
        2088
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1282": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2126,
        2128
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x12"
    },
    "1284": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2106,
        2118
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1285": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2106,
        2122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1287": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2106,
        2122
      ],
      "op": "ADD",
      "path": "0"
    },
    "1288": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2106,
        2122
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1289": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2106,
        2128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1291": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2106,
        2128
      ],
      "op": "SIGNEXTEND",
      "path": "0"
    },
    "1292": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2106,
        2128
      ],
      "op": "SLT",
      "path": "0"
    },
    "1293": {
      "branch": 20,
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2106,
        2128
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1294": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2098,
        2160
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x559"
    },
    "1297": {
      "branch": 20,
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2098,
        2160
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1298": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2098,
        2160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1300": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2098,
        2160
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1301": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1307": {
      "op": "SHL"
    },
    "1308": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2098,
        2160
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1309": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2098,
        2160
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1312": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2098,
        2160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1314": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2098,
        2160
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1315": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2098,
        2160
      ],
      "op": "ADD",
      "path": "0"
    },
    "1316": {
      "op": "MSTORE"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1321": {
      "op": "DUP3"
    },
    "1322": {
      "op": "ADD"
    },
    "1323": {
      "op": "MSTORE"
    },
    "1324": {
      "op": "PUSH32",
      "value": "0x54686520706572736F6E206973206E6F7420616E206164756C74210000000000"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1359": {
      "op": "DUP3"
    },
    "1360": {
      "op": "ADD"
    },
    "1361": {
      "op": "MSTORE"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1364": {
      "op": "ADD"
    },
    "1365": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2098,
        2160
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x425"
    },
    "1368": {
      "op": "JUMP"
    },
    "1369": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2098,
        2160
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1370": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2191,
        2203
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 4
    },
    "1371": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2191,
        2217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1373": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2191,
        2217
      ],
      "op": "ADD",
      "path": "0"
    },
    "1374": {
      "branch": 21,
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2191,
        2217
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1375": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2170,
        2277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B5"
    },
    "1378": {
      "branch": 21,
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2170,
        2277
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1379": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2170,
        2277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1381": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2170,
        2277
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1382": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1388": {
      "op": "SHL"
    },
    "1389": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2170,
        2277
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1390": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2170,
        2277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1393": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2170,
        2277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1395": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2170,
        2277
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1396": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2170,
        2277
      ],
      "op": "ADD",
      "path": "0"
    },
    "1397": {
      "op": "MSTORE"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1402": {
      "op": "DUP3"
    },
    "1403": {
      "op": "ADD"
    },
    "1404": {
      "op": "MSTORE"
    },
    "1405": {
      "op": "PUSH32",
      "value": "0x54686520706572736F6E206973206E6F7420616C6C6F77656420746F20766F74"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1440": {
      "op": "DUP3"
    },
    "1441": {
      "op": "ADD"
    },
    "1442": {
      "op": "MSTORE"
    },
    "1443": {
      "op": "PUSH2",
      "value": "0x6521"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1448": {
      "op": "SHL"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1451": {
      "op": "DUP3"
    },
    "1452": {
      "op": "ADD"
    },
    "1453": {
      "op": "MSTORE"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1456": {
      "op": "ADD"
    },
    "1457": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2170,
        2277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x425"
    },
    "1460": {
      "op": "JUMP"
    },
    "1461": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2170,
        2277
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1462": {
      "op": "POP"
    },
    "1463": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2294,
        2298
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x1"
    },
    "1465": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        2294,
        2298
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1466": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        1422,
        2365
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1467": {
      "op": "POP"
    },
    "1468": {
      "op": "POP"
    },
    "1469": {
      "op": "POP"
    },
    "1470": {
      "op": "POP"
    },
    "1471": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "o",
      "offset": [
        1422,
        2365
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1472": {
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1473": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1474": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1475": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1477": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1478": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1479": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1480": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1481": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1482": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1483": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1484": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1486": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1487": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1488": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1489": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1490": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1491": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1492": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1493": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1494": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1495": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1496": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1497": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1498": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1499": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1500": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1501": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1502": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E6"
    },
    "1505": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1506": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "1509": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        534,
        572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1510": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1511": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1512": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1514": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1515": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1517": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1518": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1519": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DIV",
      "path": "0"
    },
    "1520": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MUL",
      "path": "0"
    },
    "1521": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1523": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1524": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1526": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1527": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1528": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1529": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1530": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1532": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1533": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1534": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1535": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1536": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1537": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1538": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1539": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1540": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1542": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1543": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1544": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1545": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1546": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x612"
    },
    "1549": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1550": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "1553": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        534,
        572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1554": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1555": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1556": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1557": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65F"
    },
    "1560": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1561": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1562": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1564": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "LT",
      "path": "0"
    },
    "1565": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x634"
    },
    "1568": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1569": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1572": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1573": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1574": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1575": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DIV",
      "path": "0"
    },
    "1576": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MUL",
      "path": "0"
    },
    "1577": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1578": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1579": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1580": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1582": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1583": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1584": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65F"
    },
    "1587": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1588": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1589": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1590": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1591": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1592": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1593": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1595": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1596": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1598": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1600": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1601": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1602": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1603": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1604": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1605": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1606": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1607": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1608": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1610": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1611": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1612": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1614": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1615": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1616": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1617": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "GT",
      "path": "0"
    },
    "1618": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x642"
    },
    "1621": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1622": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1623": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1624": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SUB",
      "path": "0"
    },
    "1625": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1627": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "AND",
      "path": "0"
    },
    "1628": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1629": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1630": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1631": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1632": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "POP",
      "path": "0"
    },
    "1633": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "POP",
      "path": "0"
    },
    "1634": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "POP",
      "path": "0"
    },
    "1635": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "POP",
      "path": "0"
    },
    "1636": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "POP",
      "path": "0"
    },
    "1637": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1638": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1639": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1641": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1642": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1643": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1644": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x674"
    },
    "1647": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1648": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "1651": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        534,
        572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1652": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1653": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1654": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1656": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1657": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1659": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1660": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1661": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DIV",
      "path": "0"
    },
    "1662": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MUL",
      "path": "0"
    },
    "1663": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1665": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1666": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1668": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1669": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1670": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1671": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1672": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1674": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1675": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1676": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1677": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1678": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1679": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1680": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1681": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1682": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1684": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1685": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1686": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1687": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1688": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A0"
    },
    "1691": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1692": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "1695": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        534,
        572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1696": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1697": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1698": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1699": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6ED"
    },
    "1702": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1703": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1704": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1706": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "LT",
      "path": "0"
    },
    "1707": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C2"
    },
    "1710": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1711": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1714": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1715": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1716": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1717": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DIV",
      "path": "0"
    },
    "1718": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MUL",
      "path": "0"
    },
    "1719": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1720": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1721": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1722": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1724": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1725": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1726": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6ED"
    },
    "1729": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1730": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1731": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1732": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1733": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1734": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1735": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1737": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1738": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1740": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1742": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1743": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1744": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1745": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1746": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1747": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1748": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1749": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1750": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1752": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1753": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1754": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1756": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1757": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1758": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1759": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "GT",
      "path": "0"
    },
    "1760": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D0"
    },
    "1763": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1764": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1765": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1766": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SUB",
      "path": "0"
    },
    "1767": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1769": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "AND",
      "path": "0"
    },
    "1770": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1771": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1772": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1773": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1774": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "POP",
      "path": "0"
    },
    "1775": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "POP",
      "path": "0"
    },
    "1776": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "POP",
      "path": "0"
    },
    "1777": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "POP",
      "path": "0"
    },
    "1778": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "POP",
      "path": "0"
    },
    "1779": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1780": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1781": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1783": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1784": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1785": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1786": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x702"
    },
    "1789": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1790": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "1793": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        534,
        572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1794": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1795": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1796": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1798": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1799": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1801": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1802": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1803": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DIV",
      "path": "0"
    },
    "1804": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MUL",
      "path": "0"
    },
    "1805": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1807": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1808": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1810": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1811": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1812": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1813": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1814": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1816": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1817": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1818": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1819": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1820": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1821": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1822": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1823": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1824": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1826": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1827": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1828": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1829": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1830": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72E"
    },
    "1833": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1834": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "1837": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "i",
      "offset": [
        534,
        572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1838": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1839": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1840": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1841": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77B"
    },
    "1844": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1845": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1846": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1848": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "LT",
      "path": "0"
    },
    "1849": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x750"
    },
    "1852": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1853": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1856": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1857": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1858": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1859": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DIV",
      "path": "0"
    },
    "1860": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MUL",
      "path": "0"
    },
    "1861": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1862": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1863": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1864": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1866": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1867": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1868": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77B"
    },
    "1871": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1872": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1873": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1874": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1875": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1876": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1877": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1879": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1880": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1882": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1884": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1885": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1886": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1887": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1888": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1889": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1890": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1891": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1892": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1894": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1895": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1896": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1898": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1899": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1900": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1901": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "GT",
      "path": "0"
    },
    "1902": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75E"
    },
    "1905": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1906": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1907": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1908": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SUB",
      "path": "0"
    },
    "1909": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1911": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "AND",
      "path": "0"
    },
    "1912": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1913": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1914": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1915": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1916": {
      "op": "POP"
    },
    "1917": {
      "op": "POP"
    },
    "1918": {
      "op": "POP"
    },
    "1919": {
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1921": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1922": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1923": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "ADD",
      "path": "0"
    },
    "1924": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1925": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1926": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1927": {
      "op": "POP"
    },
    "1928": {
      "op": "POP"
    },
    "1929": {
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1931": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1932": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1933": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SIGNEXTEND",
      "path": "0"
    },
    "1934": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1935": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1937": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "1941": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1942": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1943": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DIV",
      "path": "0"
    },
    "1944": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "AND",
      "path": "0"
    },
    "1945": {
      "fn": "VotingSystem.verifyVoter",
      "offset": [
        534,
        572
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1946": {
      "fn": "VotingSystem.verifyVoter",
      "jump": "o",
      "offset": [
        534,
        572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1947": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2866,
        3036
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1948": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2960,
        2967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1950": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3000
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x2"
    },
    "1952": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        3001,
        3014
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1953": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1955": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1956": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AD"
    },
    "1959": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1960": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1961": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF03"
    },
    "1964": {
      "fn": "VotingSystem.votesValue",
      "jump": "i",
      "offset": [
        2990,
        3015
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1965": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1966": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1967": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1968": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1969": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1971": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "ADD",
      "path": "0"
    },
    "1972": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1974": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1975": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1976": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1977": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "SUB",
      "path": "0"
    },
    "1978": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1979": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3015
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1980": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3029
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1982": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3029
      ],
      "op": "ADD",
      "path": "0"
    },
    "1983": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2990,
        3029
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1984": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2983,
        3029
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1985": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2983,
        3029
      ],
      "op": "POP",
      "path": "0"
    },
    "1986": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2866,
        3036
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1987": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2866,
        3036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1988": {
      "fn": "VotingSystem.votesValue",
      "offset": [
        2866,
        3036
      ],
      "op": "POP",
      "path": "0"
    },
    "1989": {
      "fn": "VotingSystem.votesValue",
      "jump": "o",
      "offset": [
        2866,
        3036
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1990": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2489,
        2860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1991": {
      "offset": [
        2424,
        2437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1993": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2424,
        2437
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2000": {
      "op": "SHL"
    },
    "2001": {
      "op": "SUB"
    },
    "2002": {
      "offset": [
        2424,
        2437
      ],
      "op": "AND",
      "path": "0"
    },
    "2003": {
      "offset": [
        2410,
        2420
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2004": {
      "offset": [
        2410,
        2437
      ],
      "op": "EQ",
      "path": "0"
    },
    "2005": {
      "offset": [
        2402,
        2465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x820"
    },
    "2008": {
      "offset": [
        2402,
        2465
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2009": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2402,
        2465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2011": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2402,
        2465
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2012": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2018": {
      "op": "SHL"
    },
    "2019": {
      "offset": [
        2402,
        2465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2020": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2402,
        2465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2023": {
      "offset": [
        2402,
        2465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2025": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2402,
        2465
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2026": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2402,
        2465
      ],
      "op": "ADD",
      "path": "0"
    },
    "2027": {
      "op": "MSTORE"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2032": {
      "op": "DUP3"
    },
    "2033": {
      "op": "ADD"
    },
    "2034": {
      "op": "MSTORE"
    },
    "2035": {
      "op": "PUSH32",
      "value": "0x4E6F742074686520636F6E7472616374206F776E657221000000000000000000"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2070": {
      "op": "DUP3"
    },
    "2071": {
      "op": "ADD"
    },
    "2072": {
      "op": "MSTORE"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2075": {
      "op": "ADD"
    },
    "2076": {
      "offset": [
        2402,
        2465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x425"
    },
    "2079": {
      "op": "JUMP"
    },
    "2080": {
      "offset": [
        2402,
        2465
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2081": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2557,
        2562
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x0"
    },
    "2083": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2542,
        2562
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2084": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2542,
        2562
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2089": {
      "op": "SHL"
    },
    "2090": {
      "op": "NOT"
    },
    "2091": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2542,
        2562
      ],
      "op": "AND",
      "path": "0"
    },
    "2092": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2542,
        2562
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2093": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2542,
        2562
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2094": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2632
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x40"
    },
    "2096": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2632
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2097": {
      "op": "PUSH10",
      "value": "0x4B616E64796461742031"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2110": {
      "op": "SHL"
    },
    "2111": {
      "op": "DUP2"
    },
    "2112": {
      "op": "MSTORE"
    },
    "2113": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2115": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "2118": {
      "op": "ADD"
    },
    "2119": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2120": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2632
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2121": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2632
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2122": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2124": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2632
      ],
      "op": "ADD",
      "path": "0"
    },
    "2125": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2127": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2632
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2128": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2632
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2129": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2632
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2130": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2632
      ],
      "op": "SUB",
      "path": "0"
    },
    "2131": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2132": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2632
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2133": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2659
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2135": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2659
      ],
      "op": "ADD",
      "path": "0"
    },
    "2136": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2608,
        2659
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2137": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2139": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2589,
        2590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2141": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2142": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2143": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2144": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "LT",
      "path": "0"
    },
    "2145": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86C"
    },
    "2148": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2149": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86C"
    },
    "2152": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF59"
    },
    "2155": {
      "fn": "VotingSystem.finishElection",
      "jump": "i",
      "offset": [
        2572,
        2591
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2156": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2157": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2158": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2160": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2161": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2163": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2165": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2166": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2167": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2169": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "MUL",
      "path": "0"
    },
    "2170": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2591
      ],
      "op": "ADD",
      "path": "0"
    },
    "2171": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2173": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2605
      ],
      "op": "ADD",
      "path": "0"
    },
    "2174": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2659
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2175": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2176": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2659
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2177": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2572,
        2659
      ],
      "op": "POP",
      "path": "0"
    },
    "2178": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2715
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x2"
    },
    "2180": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2182": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2183": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A0"
    },
    "2186": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2187": {
      "op": "PUSH10",
      "value": "0x25B0B7323CB230BA1019"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "2200": {
      "op": "SHL"
    },
    "2201": {
      "op": "DUP2"
    },
    "2202": {
      "op": "MSTORE"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "2205": {
      "op": "ADD"
    },
    "2206": {
      "op": "SWAP1"
    },
    "2207": {
      "op": "JUMP"
    },
    "2208": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2209": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2210": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2211": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2212": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2214": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "ADD",
      "path": "0"
    },
    "2215": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2217": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2218": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2219": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2220": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "SUB",
      "path": "0"
    },
    "2221": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2222": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2729
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2223": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2756
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2225": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2756
      ],
      "op": "ADD",
      "path": "0"
    },
    "2226": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2705,
        2756
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2227": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2229": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2686,
        2687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2231": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2232": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2233": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2234": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "LT",
      "path": "0"
    },
    "2235": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C6"
    },
    "2238": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2239": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C6"
    },
    "2242": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF59"
    },
    "2245": {
      "fn": "VotingSystem.finishElection",
      "jump": "i",
      "offset": [
        2669,
        2688
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2246": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2247": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2248": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2250": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2251": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2253": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2255": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2256": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2257": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2259": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "MUL",
      "path": "0"
    },
    "2260": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2688
      ],
      "op": "ADD",
      "path": "0"
    },
    "2261": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2263": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2264": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2756
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2265": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2756
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2266": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2756
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2267": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2669,
        2756
      ],
      "op": "POP",
      "path": "0"
    },
    "2268": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2812
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x2"
    },
    "2270": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2272": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2273": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FA"
    },
    "2276": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2277": {
      "op": "PUSH10",
      "value": "0x4B616E64796461742033"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2290": {
      "op": "SHL"
    },
    "2291": {
      "op": "DUP2"
    },
    "2292": {
      "op": "MSTORE"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "2295": {
      "op": "ADD"
    },
    "2296": {
      "op": "SWAP1"
    },
    "2297": {
      "op": "JUMP"
    },
    "2298": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2299": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2300": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2301": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2302": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2304": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "ADD",
      "path": "0"
    },
    "2305": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2307": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2308": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2309": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2310": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "SUB",
      "path": "0"
    },
    "2311": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2312": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2826
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2313": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2315": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2853
      ],
      "op": "ADD",
      "path": "0"
    },
    "2316": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2802,
        2853
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2317": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2319": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2783,
        2784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2321": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2322": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2323": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2324": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "LT",
      "path": "0"
    },
    "2325": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x920"
    },
    "2328": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2329": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x920"
    },
    "2332": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF59"
    },
    "2335": {
      "fn": "VotingSystem.finishElection",
      "jump": "i",
      "offset": [
        2766,
        2785
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2336": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2337": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2338": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2340": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2341": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2343": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2345": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2346": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2347": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2349": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "MUL",
      "path": "0"
    },
    "2350": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2785
      ],
      "op": "ADD",
      "path": "0"
    },
    "2351": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2353": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2799
      ],
      "op": "ADD",
      "path": "0"
    },
    "2354": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2355": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2356": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2853
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2357": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        2766,
        2853
      ],
      "op": "POP",
      "path": "0"
    },
    "2358": {
      "fn": "VotingSystem.finishElection",
      "jump": "o",
      "offset": [
        2489,
        2860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2359": {
      "offset": [
        749,
        784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2360": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2362": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2363": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2364": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2365": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2366": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "LT",
      "path": "0"
    },
    "2367": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x947"
    },
    "2370": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2371": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2373": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2374": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2375": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2376": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2377": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2379": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2380": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2382": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2384": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2385": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2386": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2388": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "MUL",
      "path": "0"
    },
    "2389": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "ADD",
      "path": "0"
    },
    "2390": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2392": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2393": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "POP",
      "path": "0"
    },
    "2394": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2395": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "POP",
      "path": "0"
    },
    "2396": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2397": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2399": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "ADD",
      "path": "0"
    },
    "2400": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2401": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2402": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96A"
    },
    "2405": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2406": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "2409": {
      "fn": "VotingSystem.finishElection",
      "jump": "i",
      "offset": [
        749,
        784
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2410": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2411": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2412": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2414": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "ADD",
      "path": "0"
    },
    "2415": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2417": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2418": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2419": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DIV",
      "path": "0"
    },
    "2420": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "MUL",
      "path": "0"
    },
    "2421": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2423": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "ADD",
      "path": "0"
    },
    "2424": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2426": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2427": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2428": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2429": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "ADD",
      "path": "0"
    },
    "2430": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2432": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2433": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2434": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2435": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2436": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2437": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2438": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2439": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2440": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2442": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "ADD",
      "path": "0"
    },
    "2443": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2444": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2445": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2446": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x996"
    },
    "2449": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2450": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "2453": {
      "fn": "VotingSystem.finishElection",
      "jump": "i",
      "offset": [
        749,
        784
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2454": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2455": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2456": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2457": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E3"
    },
    "2460": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2461": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2462": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2464": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "LT",
      "path": "0"
    },
    "2465": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B8"
    },
    "2468": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2469": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2472": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2473": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2474": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2475": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DIV",
      "path": "0"
    },
    "2476": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "MUL",
      "path": "0"
    },
    "2477": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2478": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2479": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2480": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2482": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "ADD",
      "path": "0"
    },
    "2483": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2484": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E3"
    },
    "2487": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2488": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2489": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2490": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "ADD",
      "path": "0"
    },
    "2491": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2492": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2493": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2495": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2496": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2498": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2500": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2501": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2502": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2503": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2504": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2505": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2506": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2507": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2508": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2510": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "ADD",
      "path": "0"
    },
    "2511": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2512": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2514": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "ADD",
      "path": "0"
    },
    "2515": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2516": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2517": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "GT",
      "path": "0"
    },
    "2518": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C6"
    },
    "2521": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2522": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2523": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2524": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SUB",
      "path": "0"
    },
    "2525": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2527": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "AND",
      "path": "0"
    },
    "2528": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2529": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "ADD",
      "path": "0"
    },
    "2530": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2531": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2532": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "POP",
      "path": "0"
    },
    "2533": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "POP",
      "path": "0"
    },
    "2534": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "POP",
      "path": "0"
    },
    "2535": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "POP",
      "path": "0"
    },
    "2536": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "POP",
      "path": "0"
    },
    "2537": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2538": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2539": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2541": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "ADD",
      "path": "0"
    },
    "2542": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2543": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2544": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "POP",
      "path": "0"
    },
    "2545": {
      "fn": "VotingSystem.finishElection",
      "offset": [
        749,
        784
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2546": {
      "fn": "VotingSystem.finishElection",
      "jump": "o",
      "offset": [
        749,
        784
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2547": {
      "fn": "VotingSystem.vote",
      "offset": [
        944,
        1416
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2548": {
      "fn": "VotingSystem.vote",
      "offset": [
        1129,
        1141
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x0"
    },
    "2550": {
      "fn": "VotingSystem.vote",
      "offset": [
        1129,
        1141
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2555": {
      "op": "SHL"
    },
    "2556": {
      "fn": "VotingSystem.vote",
      "offset": [
        1129,
        1141
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2557": {
      "fn": "VotingSystem.vote",
      "offset": [
        1129,
        1141
      ],
      "op": "DIV",
      "path": "0"
    },
    "2558": {
      "fn": "VotingSystem.vote",
      "offset": [
        1129,
        1141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2560": {
      "branch": 22,
      "fn": "VotingSystem.vote",
      "offset": [
        1129,
        1141
      ],
      "op": "AND",
      "path": "0"
    },
    "2561": {
      "fn": "VotingSystem.vote",
      "offset": [
        1121,
        1165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA42"
    },
    "2564": {
      "branch": 22,
      "fn": "VotingSystem.vote",
      "offset": [
        1121,
        1165
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2565": {
      "fn": "VotingSystem.vote",
      "offset": [
        1121,
        1165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2567": {
      "fn": "VotingSystem.vote",
      "offset": [
        1121,
        1165
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2568": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2574": {
      "op": "SHL"
    },
    "2575": {
      "fn": "VotingSystem.vote",
      "offset": [
        1121,
        1165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2576": {
      "fn": "VotingSystem.vote",
      "offset": [
        1121,
        1165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2579": {
      "fn": "VotingSystem.vote",
      "offset": [
        1121,
        1165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2581": {
      "fn": "VotingSystem.vote",
      "offset": [
        1121,
        1165
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2582": {
      "fn": "VotingSystem.vote",
      "offset": [
        1121,
        1165
      ],
      "op": "ADD",
      "path": "0"
    },
    "2583": {
      "op": "MSTORE"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2588": {
      "op": "DUP3"
    },
    "2589": {
      "op": "ADD"
    },
    "2590": {
      "op": "MSTORE"
    },
    "2591": {
      "op": "PUSH19",
      "value": "0x456C656374696F6E20697320636C6F73656421"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "2613": {
      "op": "SHL"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2616": {
      "op": "DUP3"
    },
    "2617": {
      "op": "ADD"
    },
    "2618": {
      "op": "MSTORE"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2621": {
      "op": "ADD"
    },
    "2622": {
      "fn": "VotingSystem.vote",
      "offset": [
        1121,
        1165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x425"
    },
    "2625": {
      "op": "JUMP"
    },
    "2626": {
      "fn": "VotingSystem.vote",
      "offset": [
        1121,
        1165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2627": {
      "fn": "VotingSystem.vote",
      "offset": [
        1196,
        1244
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0xA4D"
    },
    "2630": {
      "fn": "VotingSystem.vote",
      "offset": [
        1208,
        1217
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2631": {
      "fn": "VotingSystem.vote",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2632": {
      "fn": "VotingSystem.vote",
      "offset": [
        1233,
        1243
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2633": {
      "fn": "VotingSystem.vote",
      "offset": [
        1196,
        1207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B3"
    },
    "2636": {
      "fn": "VotingSystem.vote",
      "jump": "i",
      "offset": [
        1196,
        1244
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2637": {
      "branch": 23,
      "fn": "VotingSystem.vote",
      "offset": [
        1196,
        1244
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2638": {
      "fn": "VotingSystem.vote",
      "offset": [
        1175,
        1305
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA5"
    },
    "2641": {
      "branch": 23,
      "fn": "VotingSystem.vote",
      "offset": [
        1175,
        1305
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2642": {
      "fn": "VotingSystem.vote",
      "offset": [
        1175,
        1305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2644": {
      "fn": "VotingSystem.vote",
      "offset": [
        1175,
        1305
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2645": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2651": {
      "op": "SHL"
    },
    "2652": {
      "fn": "VotingSystem.vote",
      "offset": [
        1175,
        1305
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2653": {
      "fn": "VotingSystem.vote",
      "offset": [
        1175,
        1305
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2656": {
      "fn": "VotingSystem.vote",
      "offset": [
        1175,
        1305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2658": {
      "fn": "VotingSystem.vote",
      "offset": [
        1175,
        1305
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2659": {
      "fn": "VotingSystem.vote",
      "offset": [
        1175,
        1305
      ],
      "op": "ADD",
      "path": "0"
    },
    "2660": {
      "op": "MSTORE"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2665": {
      "op": "DUP3"
    },
    "2666": {
      "op": "ADD"
    },
    "2667": {
      "op": "MSTORE"
    },
    "2668": {
      "op": "PUSH32",
      "value": "0x566F746572206469646E27742066756C66696C6C7320726571756972656D656E"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2703": {
      "op": "DUP3"
    },
    "2704": {
      "op": "ADD"
    },
    "2705": {
      "op": "MSTORE"
    },
    "2706": {
      "op": "PUSH3",
      "value": "0x747321"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2712": {
      "op": "SHL"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2715": {
      "op": "DUP3"
    },
    "2716": {
      "op": "ADD"
    },
    "2717": {
      "op": "MSTORE"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2720": {
      "op": "ADD"
    },
    "2721": {
      "fn": "VotingSystem.vote",
      "offset": [
        1175,
        1305
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x425"
    },
    "2724": {
      "op": "JUMP"
    },
    "2725": {
      "fn": "VotingSystem.vote",
      "offset": [
        1175,
        1305
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2726": {
      "fn": "VotingSystem.vote",
      "offset": [
        1350,
        1355
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x0"
    },
    "2728": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2730": {
      "fn": "VotingSystem.vote",
      "offset": [
        1322,
        1332
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2731": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2733": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2734": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB7"
    },
    "2737": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2738": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2739": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF03"
    },
    "2742": {
      "fn": "VotingSystem.vote",
      "jump": "i",
      "offset": [
        1315,
        1333
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2743": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2744": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2745": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2746": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2747": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2749": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "ADD",
      "path": "0"
    },
    "2750": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2752": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2753": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2754": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2755": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "SUB",
      "path": "0"
    },
    "2756": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2757": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1333
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2758": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2760": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1347
      ],
      "op": "ADD",
      "path": "0"
    },
    "2761": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2763": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2766": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "EXP",
      "path": "0"
    },
    "2767": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2768": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2769": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2770": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2772": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "MUL",
      "path": "0"
    },
    "2773": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "NOT",
      "path": "0"
    },
    "2774": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "AND",
      "path": "0"
    },
    "2775": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2776": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2777": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2778": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2779": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "MUL",
      "path": "0"
    },
    "2780": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "OR",
      "path": "0"
    },
    "2781": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2782": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2783": {
      "fn": "VotingSystem.vote",
      "offset": [
        1315,
        1355
      ],
      "op": "POP",
      "path": "0"
    },
    "2784": {
      "fn": "VotingSystem.vote",
      "offset": [
        1408,
        1409
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x1"
    },
    "2786": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2788": {
      "fn": "VotingSystem.vote",
      "offset": [
        1376,
        1389
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2789": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2791": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2792": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF1"
    },
    "2795": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2796": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2797": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF03"
    },
    "2800": {
      "fn": "VotingSystem.vote",
      "jump": "i",
      "offset": [
        1365,
        1390
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2801": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2802": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2803": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2804": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2805": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2807": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "ADD",
      "path": "0"
    },
    "2808": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2810": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2811": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2812": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2813": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "SUB",
      "path": "0"
    },
    "2814": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2815": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1390
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2816": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1404
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2818": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1404
      ],
      "op": "ADD",
      "path": "0"
    },
    "2819": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1404
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2821": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1409
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2822": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1409
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2823": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1409
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2824": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1409
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB11"
    },
    "2827": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1409
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2828": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1409
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2829": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1409
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF6F"
    },
    "2832": {
      "fn": "VotingSystem.vote",
      "jump": "i",
      "offset": [
        1365,
        1409
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2833": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1409
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2834": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1409
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2835": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1409
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2836": {
      "fn": "VotingSystem.vote",
      "offset": [
        1365,
        1409
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2837": {
      "op": "POP"
    },
    "2838": {
      "op": "POP"
    },
    "2839": {
      "op": "POP"
    },
    "2840": {
      "op": "POP"
    },
    "2841": {
      "op": "POP"
    },
    "2842": {
      "op": "POP"
    },
    "2843": {
      "fn": "VotingSystem.vote",
      "jump": "o",
      "offset": [
        944,
        1416
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2844": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5212,
        5597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2845": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5332,
        5336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2847": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5511,
        5520
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2848": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2850": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2851": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2853": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "ADD",
      "path": "0"
    },
    "2854": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2F"
    },
    "2857": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2858": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2859": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF03"
    },
    "2862": {
      "fn": "VotingSystem.isTheSameString",
      "jump": "i",
      "offset": [
        5494,
        5521
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2863": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2864": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2866": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2867": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2869": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2870": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2871": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "SUB",
      "path": "0"
    },
    "2872": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "SUB",
      "path": "0"
    },
    "2873": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2874": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2875": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2876": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2878": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5494,
        5521
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2879": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5484,
        5522
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2880": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5484,
        5522
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2881": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5484,
        5522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2882": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5484,
        5522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2884": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5484,
        5522
      ],
      "op": "ADD",
      "path": "0"
    },
    "2885": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5484,
        5522
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2886": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5457,
        5466
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2887": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2889": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2890": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2892": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "ADD",
      "path": "0"
    },
    "2893": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB56"
    },
    "2896": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2897": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2898": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF03"
    },
    "2901": {
      "fn": "VotingSystem.isTheSameString",
      "jump": "i",
      "offset": [
        5440,
        5467
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2902": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2903": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2905": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2906": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2908": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2909": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2910": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "SUB",
      "path": "0"
    },
    "2911": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "SUB",
      "path": "0"
    },
    "2912": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2913": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2914": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2915": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2917": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5440,
        5467
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2918": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5430,
        5468
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2919": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5430,
        5468
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2920": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5430,
        5468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2921": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5430,
        5468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2923": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5430,
        5468
      ],
      "op": "ADD",
      "path": "0"
    },
    "2924": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5430,
        5468
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2925": {
      "branch": 24,
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5430,
        5522
      ],
      "op": "SUB",
      "path": "0"
    },
    "2926": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5413,
        5569
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB79"
    },
    "2929": {
      "branch": 24,
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5413,
        5569
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2930": {
      "op": "POP"
    },
    "2931": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5554,
        5558
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x1"
    },
    "2933": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5547,
        5558
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7D"
    },
    "2936": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5547,
        5558
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2937": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5413,
        5569
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2938": {
      "op": "POP"
    },
    "2939": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5585,
        5590
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x0"
    },
    "2941": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5212,
        5597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2942": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5212,
        5597
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2943": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5212,
        5597
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2944": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5212,
        5597
      ],
      "op": "POP",
      "path": "0"
    },
    "2945": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        5212,
        5597
      ],
      "op": "POP",
      "path": "0"
    },
    "2946": {
      "fn": "VotingSystem.isTheSameString",
      "jump": "o",
      "offset": [
        5212,
        5597
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2947": {
      "offset": [
        663,
        709
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2948": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2949": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2950": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2952": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2953": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2954": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "ADD",
      "path": "0"
    },
    "2955": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2956": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "ADD",
      "path": "0"
    },
    "2957": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2958": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2959": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2961": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2962": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2963": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2964": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2965": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "ADD",
      "path": "0"
    },
    "2966": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2967": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2968": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2969": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "ADD",
      "path": "0"
    },
    "2970": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2971": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2972": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2973": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2974": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2975": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2976": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2977": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96A"
    },
    "2980": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2981": {
      "fn": "VotingSystem.isTheSameString",
      "offset": [
        663,
        709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1F"
    },
    "2984": {
      "fn": "VotingSystem.isTheSameString",
      "jump": "i",
      "offset": [
        663,
        709
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2985": {
      "op": "JUMPDEST"
    },
    "2986": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2993": {
      "op": "SHL"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2996": {
      "op": "MSTORE"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3001": {
      "op": "MSTORE"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3006": {
      "op": "REVERT"
    },
    "3007": {
      "op": "JUMPDEST"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3010": {
      "op": "DUP3"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3013": {
      "op": "DUP4"
    },
    "3014": {
      "op": "ADD"
    },
    "3015": {
      "op": "SLT"
    },
    "3016": {
      "op": "PUSH2",
      "value": "0xBD0"
    },
    "3019": {
      "op": "JUMPI"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3022": {
      "op": "DUP1"
    },
    "3023": {
      "op": "REVERT"
    },
    "3024": {
      "op": "JUMPDEST"
    },
    "3025": {
      "op": "DUP2"
    },
    "3026": {
      "op": "CALLDATALOAD"
    },
    "3027": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3036": {
      "op": "DUP1"
    },
    "3037": {
      "op": "DUP3"
    },
    "3038": {
      "op": "GT"
    },
    "3039": {
      "op": "ISZERO"
    },
    "3040": {
      "op": "PUSH2",
      "value": "0xBEB"
    },
    "3043": {
      "op": "JUMPI"
    },
    "3044": {
      "op": "PUSH2",
      "value": "0xBEB"
    },
    "3047": {
      "op": "PUSH2",
      "value": "0xBA9"
    },
    "3050": {
      "jump": "i",
      "op": "JUMP"
    },
    "3051": {
      "op": "JUMPDEST"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3054": {
      "op": "MLOAD"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3057": {
      "op": "DUP4"
    },
    "3058": {
      "op": "ADD"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3061": {
      "op": "NOT"
    },
    "3062": {
      "op": "SWAP1"
    },
    "3063": {
      "op": "DUP2"
    },
    "3064": {
      "op": "AND"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3067": {
      "op": "ADD"
    },
    "3068": {
      "op": "AND"
    },
    "3069": {
      "op": "DUP2"
    },
    "3070": {
      "op": "ADD"
    },
    "3071": {
      "op": "SWAP1"
    },
    "3072": {
      "op": "DUP3"
    },
    "3073": {
      "op": "DUP3"
    },
    "3074": {
      "op": "GT"
    },
    "3075": {
      "op": "DUP2"
    },
    "3076": {
      "op": "DUP4"
    },
    "3077": {
      "op": "LT"
    },
    "3078": {
      "op": "OR"
    },
    "3079": {
      "op": "ISZERO"
    },
    "3080": {
      "op": "PUSH2",
      "value": "0xC13"
    },
    "3083": {
      "op": "JUMPI"
    },
    "3084": {
      "op": "PUSH2",
      "value": "0xC13"
    },
    "3087": {
      "op": "PUSH2",
      "value": "0xBA9"
    },
    "3090": {
      "jump": "i",
      "op": "JUMP"
    },
    "3091": {
      "op": "JUMPDEST"
    },
    "3092": {
      "op": "DUP2"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3095": {
      "op": "MSTORE"
    },
    "3096": {
      "op": "DUP4"
    },
    "3097": {
      "op": "DUP2"
    },
    "3098": {
      "op": "MSTORE"
    },
    "3099": {
      "op": "DUP7"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3102": {
      "op": "DUP6"
    },
    "3103": {
      "op": "DUP9"
    },
    "3104": {
      "op": "ADD"
    },
    "3105": {
      "op": "ADD"
    },
    "3106": {
      "op": "GT"
    },
    "3107": {
      "op": "ISZERO"
    },
    "3108": {
      "op": "PUSH2",
      "value": "0xC2C"
    },
    "3111": {
      "op": "JUMPI"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3114": {
      "op": "DUP1"
    },
    "3115": {
      "op": "REVERT"
    },
    "3116": {
      "op": "JUMPDEST"
    },
    "3117": {
      "op": "DUP4"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3120": {
      "op": "DUP8"
    },
    "3121": {
      "op": "ADD"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3124": {
      "op": "DUP4"
    },
    "3125": {
      "op": "ADD"
    },
    "3126": {
      "op": "CALLDATACOPY"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3131": {
      "op": "DUP6"
    },
    "3132": {
      "op": "DUP4"
    },
    "3133": {
      "op": "ADD"
    },
    "3134": {
      "op": "ADD"
    },
    "3135": {
      "op": "MSTORE"
    },
    "3136": {
      "op": "DUP1"
    },
    "3137": {
      "op": "SWAP5"
    },
    "3138": {
      "op": "POP"
    },
    "3139": {
      "op": "POP"
    },
    "3140": {
      "op": "POP"
    },
    "3141": {
      "op": "POP"
    },
    "3142": {
      "op": "POP"
    },
    "3143": {
      "op": "SWAP3"
    },
    "3144": {
      "op": "SWAP2"
    },
    "3145": {
      "op": "POP"
    },
    "3146": {
      "op": "POP"
    },
    "3147": {
      "jump": "o",
      "op": "JUMP"
    },
    "3148": {
      "op": "JUMPDEST"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3151": {
      "op": "DUP1"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3156": {
      "op": "DUP5"
    },
    "3157": {
      "op": "DUP7"
    },
    "3158": {
      "op": "SUB"
    },
    "3159": {
      "op": "SLT"
    },
    "3160": {
      "op": "ISZERO"
    },
    "3161": {
      "op": "PUSH2",
      "value": "0xC61"
    },
    "3164": {
      "op": "JUMPI"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3167": {
      "op": "DUP1"
    },
    "3168": {
      "op": "REVERT"
    },
    "3169": {
      "op": "JUMPDEST"
    },
    "3170": {
      "op": "DUP4"
    },
    "3171": {
      "op": "CALLDATALOAD"
    },
    "3172": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3181": {
      "op": "DUP1"
    },
    "3182": {
      "op": "DUP3"
    },
    "3183": {
      "op": "GT"
    },
    "3184": {
      "op": "ISZERO"
    },
    "3185": {
      "op": "PUSH2",
      "value": "0xC79"
    },
    "3188": {
      "op": "JUMPI"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3191": {
      "op": "DUP1"
    },
    "3192": {
      "op": "REVERT"
    },
    "3193": {
      "op": "JUMPDEST"
    },
    "3194": {
      "op": "PUSH2",
      "value": "0xC85"
    },
    "3197": {
      "op": "DUP8"
    },
    "3198": {
      "op": "DUP4"
    },
    "3199": {
      "op": "DUP9"
    },
    "3200": {
      "op": "ADD"
    },
    "3201": {
      "op": "PUSH2",
      "value": "0xBBF"
    },
    "3204": {
      "jump": "i",
      "op": "JUMP"
    },
    "3205": {
      "op": "JUMPDEST"
    },
    "3206": {
      "op": "SWAP5"
    },
    "3207": {
      "op": "POP"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3210": {
      "op": "DUP7"
    },
    "3211": {
      "op": "ADD"
    },
    "3212": {
      "op": "CALLDATALOAD"
    },
    "3213": {
      "op": "SWAP2"
    },
    "3214": {
      "op": "POP"
    },
    "3215": {
      "op": "DUP1"
    },
    "3216": {
      "op": "DUP3"
    },
    "3217": {
      "op": "GT"
    },
    "3218": {
      "op": "ISZERO"
    },
    "3219": {
      "op": "PUSH2",
      "value": "0xC9B"
    },
    "3222": {
      "op": "JUMPI"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3225": {
      "op": "DUP1"
    },
    "3226": {
      "op": "REVERT"
    },
    "3227": {
      "op": "JUMPDEST"
    },
    "3228": {
      "op": "PUSH2",
      "value": "0xCA7"
    },
    "3231": {
      "op": "DUP8"
    },
    "3232": {
      "op": "DUP4"
    },
    "3233": {
      "op": "DUP9"
    },
    "3234": {
      "op": "ADD"
    },
    "3235": {
      "op": "PUSH2",
      "value": "0xBBF"
    },
    "3238": {
      "jump": "i",
      "op": "JUMP"
    },
    "3239": {
      "op": "JUMPDEST"
    },
    "3240": {
      "op": "SWAP4"
    },
    "3241": {
      "op": "POP"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3244": {
      "op": "DUP7"
    },
    "3245": {
      "op": "ADD"
    },
    "3246": {
      "op": "CALLDATALOAD"
    },
    "3247": {
      "op": "SWAP2"
    },
    "3248": {
      "op": "POP"
    },
    "3249": {
      "op": "DUP1"
    },
    "3250": {
      "op": "DUP3"
    },
    "3251": {
      "op": "GT"
    },
    "3252": {
      "op": "ISZERO"
    },
    "3253": {
      "op": "PUSH2",
      "value": "0xCBD"
    },
    "3256": {
      "op": "JUMPI"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3259": {
      "op": "DUP1"
    },
    "3260": {
      "op": "REVERT"
    },
    "3261": {
      "op": "JUMPDEST"
    },
    "3262": {
      "op": "POP"
    },
    "3263": {
      "op": "PUSH2",
      "value": "0xCCA"
    },
    "3266": {
      "op": "DUP7"
    },
    "3267": {
      "op": "DUP3"
    },
    "3268": {
      "op": "DUP8"
    },
    "3269": {
      "op": "ADD"
    },
    "3270": {
      "op": "PUSH2",
      "value": "0xBBF"
    },
    "3273": {
      "jump": "i",
      "op": "JUMP"
    },
    "3274": {
      "op": "JUMPDEST"
    },
    "3275": {
      "op": "SWAP2"
    },
    "3276": {
      "op": "POP"
    },
    "3277": {
      "op": "POP"
    },
    "3278": {
      "op": "SWAP3"
    },
    "3279": {
      "op": "POP"
    },
    "3280": {
      "op": "SWAP3"
    },
    "3281": {
      "op": "POP"
    },
    "3282": {
      "op": "SWAP3"
    },
    "3283": {
      "jump": "o",
      "op": "JUMP"
    },
    "3284": {
      "op": "JUMPDEST"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3289": {
      "op": "DUP3"
    },
    "3290": {
      "op": "DUP5"
    },
    "3291": {
      "op": "SUB"
    },
    "3292": {
      "op": "SLT"
    },
    "3293": {
      "op": "ISZERO"
    },
    "3294": {
      "op": "PUSH2",
      "value": "0xCE6"
    },
    "3297": {
      "op": "JUMPI"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3300": {
      "op": "DUP1"
    },
    "3301": {
      "op": "REVERT"
    },
    "3302": {
      "op": "JUMPDEST"
    },
    "3303": {
      "op": "DUP2"
    },
    "3304": {
      "op": "CALLDATALOAD"
    },
    "3305": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3314": {
      "op": "DUP2"
    },
    "3315": {
      "op": "GT"
    },
    "3316": {
      "op": "ISZERO"
    },
    "3317": {
      "op": "PUSH2",
      "value": "0xCFD"
    },
    "3320": {
      "op": "JUMPI"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3323": {
      "op": "DUP1"
    },
    "3324": {
      "op": "REVERT"
    },
    "3325": {
      "op": "JUMPDEST"
    },
    "3326": {
      "op": "PUSH2",
      "value": "0xD09"
    },
    "3329": {
      "op": "DUP5"
    },
    "3330": {
      "op": "DUP3"
    },
    "3331": {
      "op": "DUP6"
    },
    "3332": {
      "op": "ADD"
    },
    "3333": {
      "op": "PUSH2",
      "value": "0xBBF"
    },
    "3336": {
      "jump": "i",
      "op": "JUMP"
    },
    "3337": {
      "op": "JUMPDEST"
    },
    "3338": {
      "op": "SWAP5"
    },
    "3339": {
      "op": "SWAP4"
    },
    "3340": {
      "op": "POP"
    },
    "3341": {
      "op": "POP"
    },
    "3342": {
      "op": "POP"
    },
    "3343": {
      "op": "POP"
    },
    "3344": {
      "jump": "o",
      "op": "JUMP"
    },
    "3345": {
      "op": "JUMPDEST"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3348": {
      "op": "JUMPDEST"
    },
    "3349": {
      "op": "DUP4"
    },
    "3350": {
      "op": "DUP2"
    },
    "3351": {
      "op": "LT"
    },
    "3352": {
      "op": "ISZERO"
    },
    "3353": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "3356": {
      "op": "JUMPI"
    },
    "3357": {
      "op": "DUP2"
    },
    "3358": {
      "op": "DUP2"
    },
    "3359": {
      "op": "ADD"
    },
    "3360": {
      "op": "MLOAD"
    },
    "3361": {
      "op": "DUP4"
    },
    "3362": {
      "op": "DUP3"
    },
    "3363": {
      "op": "ADD"
    },
    "3364": {
      "op": "MSTORE"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3367": {
      "op": "ADD"
    },
    "3368": {
      "op": "PUSH2",
      "value": "0xD14"
    },
    "3371": {
      "op": "JUMP"
    },
    "3372": {
      "op": "JUMPDEST"
    },
    "3373": {
      "op": "POP"
    },
    "3374": {
      "op": "POP"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3377": {
      "op": "SWAP2"
    },
    "3378": {
      "op": "ADD"
    },
    "3379": {
      "op": "MSTORE"
    },
    "3380": {
      "jump": "o",
      "op": "JUMP"
    },
    "3381": {
      "op": "JUMPDEST"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3384": {
      "op": "DUP2"
    },
    "3385": {
      "op": "MLOAD"
    },
    "3386": {
      "op": "DUP1"
    },
    "3387": {
      "op": "DUP5"
    },
    "3388": {
      "op": "MSTORE"
    },
    "3389": {
      "op": "PUSH2",
      "value": "0xD4D"
    },
    "3392": {
      "op": "DUP2"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3395": {
      "op": "DUP7"
    },
    "3396": {
      "op": "ADD"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3399": {
      "op": "DUP7"
    },
    "3400": {
      "op": "ADD"
    },
    "3401": {
      "op": "PUSH2",
      "value": "0xD11"
    },
    "3404": {
      "jump": "i",
      "op": "JUMP"
    },
    "3405": {
      "op": "JUMPDEST"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3408": {
      "op": "ADD"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3411": {
      "op": "NOT"
    },
    "3412": {
      "op": "AND"
    },
    "3413": {
      "op": "SWAP3"
    },
    "3414": {
      "op": "SWAP1"
    },
    "3415": {
      "op": "SWAP3"
    },
    "3416": {
      "op": "ADD"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3419": {
      "op": "ADD"
    },
    "3420": {
      "op": "SWAP3"
    },
    "3421": {
      "op": "SWAP2"
    },
    "3422": {
      "op": "POP"
    },
    "3423": {
      "op": "POP"
    },
    "3424": {
      "jump": "o",
      "op": "JUMP"
    },
    "3425": {
      "op": "JUMPDEST"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3428": {
      "op": "DUP2"
    },
    "3429": {
      "op": "MSTORE"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3432": {
      "op": "PUSH2",
      "value": "0xD74"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3437": {
      "op": "DUP4"
    },
    "3438": {
      "op": "ADD"
    },
    "3439": {
      "op": "DUP9"
    },
    "3440": {
      "op": "PUSH2",
      "value": "0xD35"
    },
    "3443": {
      "jump": "i",
      "op": "JUMP"
    },
    "3444": {
      "op": "JUMPDEST"
    },
    "3445": {
      "op": "DUP3"
    },
    "3446": {
      "op": "DUP2"
    },
    "3447": {
      "op": "SUB"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3450": {
      "op": "DUP5"
    },
    "3451": {
      "op": "ADD"
    },
    "3452": {
      "op": "MSTORE"
    },
    "3453": {
      "op": "PUSH2",
      "value": "0xD86"
    },
    "3456": {
      "op": "DUP2"
    },
    "3457": {
      "op": "DUP9"
    },
    "3458": {
      "op": "PUSH2",
      "value": "0xD35"
    },
    "3461": {
      "jump": "i",
      "op": "JUMP"
    },
    "3462": {
      "op": "JUMPDEST"
    },
    "3463": {
      "op": "SWAP1"
    },
    "3464": {
      "op": "POP"
    },
    "3465": {
      "op": "DUP3"
    },
    "3466": {
      "op": "DUP2"
    },
    "3467": {
      "op": "SUB"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3470": {
      "op": "DUP5"
    },
    "3471": {
      "op": "ADD"
    },
    "3472": {
      "op": "MSTORE"
    },
    "3473": {
      "op": "PUSH2",
      "value": "0xD9A"
    },
    "3476": {
      "op": "DUP2"
    },
    "3477": {
      "op": "DUP8"
    },
    "3478": {
      "op": "PUSH2",
      "value": "0xD35"
    },
    "3481": {
      "jump": "i",
      "op": "JUMP"
    },
    "3482": {
      "op": "JUMPDEST"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3485": {
      "op": "SWAP6"
    },
    "3486": {
      "op": "SWAP1"
    },
    "3487": {
      "op": "SWAP6"
    },
    "3488": {
      "op": "SIGNEXTEND"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3491": {
      "op": "DUP5"
    },
    "3492": {
      "op": "ADD"
    },
    "3493": {
      "op": "MSTORE"
    },
    "3494": {
      "op": "POP"
    },
    "3495": {
      "op": "POP"
    },
    "3496": {
      "op": "SWAP1"
    },
    "3497": {
      "op": "ISZERO"
    },
    "3498": {
      "op": "ISZERO"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3501": {
      "op": "SWAP1"
    },
    "3502": {
      "op": "SWAP2"
    },
    "3503": {
      "op": "ADD"
    },
    "3504": {
      "op": "MSTORE"
    },
    "3505": {
      "op": "SWAP4"
    },
    "3506": {
      "op": "SWAP3"
    },
    "3507": {
      "op": "POP"
    },
    "3508": {
      "op": "POP"
    },
    "3509": {
      "op": "POP"
    },
    "3510": {
      "jump": "o",
      "op": "JUMP"
    },
    "3511": {
      "op": "JUMPDEST"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3516": {
      "op": "DUP3"
    },
    "3517": {
      "op": "DUP5"
    },
    "3518": {
      "op": "SUB"
    },
    "3519": {
      "op": "SLT"
    },
    "3520": {
      "op": "ISZERO"
    },
    "3521": {
      "op": "PUSH2",
      "value": "0xDC9"
    },
    "3524": {
      "op": "JUMPI"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3527": {
      "op": "DUP1"
    },
    "3528": {
      "op": "REVERT"
    },
    "3529": {
      "op": "JUMPDEST"
    },
    "3530": {
      "op": "POP"
    },
    "3531": {
      "op": "CALLDATALOAD"
    },
    "3532": {
      "op": "SWAP2"
    },
    "3533": {
      "op": "SWAP1"
    },
    "3534": {
      "op": "POP"
    },
    "3535": {
      "jump": "o",
      "op": "JUMP"
    },
    "3536": {
      "op": "JUMPDEST"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3539": {
      "op": "DUP2"
    },
    "3540": {
      "op": "MSTORE"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3543": {
      "op": "PUSH2",
      "value": "0xDE3"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3548": {
      "op": "DUP4"
    },
    "3549": {
      "op": "ADD"
    },
    "3550": {
      "op": "DUP6"
    },
    "3551": {
      "op": "PUSH2",
      "value": "0xD35"
    },
    "3554": {
      "jump": "i",
      "op": "JUMP"
    },
    "3555": {
      "op": "JUMPDEST"
    },
    "3556": {
      "op": "SWAP1"
    },
    "3557": {
      "op": "POP"
    },
    "3558": {
      "op": "DUP3"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3561": {
      "op": "DUP4"
    },
    "3562": {
      "op": "ADD"
    },
    "3563": {
      "op": "MSTORE"
    },
    "3564": {
      "op": "SWAP4"
    },
    "3565": {
      "op": "SWAP3"
    },
    "3566": {
      "op": "POP"
    },
    "3567": {
      "op": "POP"
    },
    "3568": {
      "op": "POP"
    },
    "3569": {
      "jump": "o",
      "op": "JUMP"
    },
    "3570": {
      "op": "JUMPDEST"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3573": {
      "op": "DUP1"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3576": {
      "op": "DUP1"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3579": {
      "op": "DUP6"
    },
    "3580": {
      "op": "DUP8"
    },
    "3581": {
      "op": "SUB"
    },
    "3582": {
      "op": "SLT"
    },
    "3583": {
      "op": "ISZERO"
    },
    "3584": {
      "op": "PUSH2",
      "value": "0xE08"
    },
    "3587": {
      "op": "JUMPI"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3590": {
      "op": "DUP1"
    },
    "3591": {
      "op": "REVERT"
    },
    "3592": {
      "op": "JUMPDEST"
    },
    "3593": {
      "op": "DUP5"
    },
    "3594": {
      "op": "CALLDATALOAD"
    },
    "3595": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3604": {
      "op": "DUP1"
    },
    "3605": {
      "op": "DUP3"
    },
    "3606": {
      "op": "GT"
    },
    "3607": {
      "op": "ISZERO"
    },
    "3608": {
      "op": "PUSH2",
      "value": "0xE20"
    },
    "3611": {
      "op": "JUMPI"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3614": {
      "op": "DUP1"
    },
    "3615": {
      "op": "REVERT"
    },
    "3616": {
      "op": "JUMPDEST"
    },
    "3617": {
      "op": "PUSH2",
      "value": "0xE2C"
    },
    "3620": {
      "op": "DUP9"
    },
    "3621": {
      "op": "DUP4"
    },
    "3622": {
      "op": "DUP10"
    },
    "3623": {
      "op": "ADD"
    },
    "3624": {
      "op": "PUSH2",
      "value": "0xBBF"
    },
    "3627": {
      "jump": "i",
      "op": "JUMP"
    },
    "3628": {
      "op": "JUMPDEST"
    },
    "3629": {
      "op": "SWAP6"
    },
    "3630": {
      "op": "POP"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3633": {
      "op": "DUP8"
    },
    "3634": {
      "op": "ADD"
    },
    "3635": {
      "op": "CALLDATALOAD"
    },
    "3636": {
      "op": "SWAP2"
    },
    "3637": {
      "op": "POP"
    },
    "3638": {
      "op": "DUP1"
    },
    "3639": {
      "op": "DUP3"
    },
    "3640": {
      "op": "GT"
    },
    "3641": {
      "op": "ISZERO"
    },
    "3642": {
      "op": "PUSH2",
      "value": "0xE42"
    },
    "3645": {
      "op": "JUMPI"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3648": {
      "op": "DUP1"
    },
    "3649": {
      "op": "REVERT"
    },
    "3650": {
      "op": "JUMPDEST"
    },
    "3651": {
      "op": "PUSH2",
      "value": "0xE4E"
    },
    "3654": {
      "op": "DUP9"
    },
    "3655": {
      "op": "DUP4"
    },
    "3656": {
      "op": "DUP10"
    },
    "3657": {
      "op": "ADD"
    },
    "3658": {
      "op": "PUSH2",
      "value": "0xBBF"
    },
    "3661": {
      "jump": "i",
      "op": "JUMP"
    },
    "3662": {
      "op": "JUMPDEST"
    },
    "3663": {
      "op": "SWAP5"
    },
    "3664": {
      "op": "POP"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3667": {
      "op": "DUP8"
    },
    "3668": {
      "op": "ADD"
    },
    "3669": {
      "op": "CALLDATALOAD"
    },
    "3670": {
      "op": "SWAP2"
    },
    "3671": {
      "op": "POP"
    },
    "3672": {
      "op": "DUP1"
    },
    "3673": {
      "op": "DUP3"
    },
    "3674": {
      "op": "GT"
    },
    "3675": {
      "op": "ISZERO"
    },
    "3676": {
      "op": "PUSH2",
      "value": "0xE64"
    },
    "3679": {
      "op": "JUMPI"
    },
    "3680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3682": {
      "op": "DUP1"
    },
    "3683": {
      "op": "REVERT"
    },
    "3684": {
      "op": "JUMPDEST"
    },
    "3685": {
      "op": "PUSH2",
      "value": "0xE70"
    },
    "3688": {
      "op": "DUP9"
    },
    "3689": {
      "op": "DUP4"
    },
    "3690": {
      "op": "DUP10"
    },
    "3691": {
      "op": "ADD"
    },
    "3692": {
      "op": "PUSH2",
      "value": "0xBBF"
    },
    "3695": {
      "jump": "i",
      "op": "JUMP"
    },
    "3696": {
      "op": "JUMPDEST"
    },
    "3697": {
      "op": "SWAP4"
    },
    "3698": {
      "op": "POP"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3701": {
      "op": "DUP8"
    },
    "3702": {
      "op": "ADD"
    },
    "3703": {
      "op": "CALLDATALOAD"
    },
    "3704": {
      "op": "SWAP2"
    },
    "3705": {
      "op": "POP"
    },
    "3706": {
      "op": "DUP1"
    },
    "3707": {
      "op": "DUP3"
    },
    "3708": {
      "op": "GT"
    },
    "3709": {
      "op": "ISZERO"
    },
    "3710": {
      "op": "PUSH2",
      "value": "0xE86"
    },
    "3713": {
      "op": "JUMPI"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3716": {
      "op": "DUP1"
    },
    "3717": {
      "op": "REVERT"
    },
    "3718": {
      "op": "JUMPDEST"
    },
    "3719": {
      "op": "POP"
    },
    "3720": {
      "op": "PUSH2",
      "value": "0xE93"
    },
    "3723": {
      "op": "DUP8"
    },
    "3724": {
      "op": "DUP3"
    },
    "3725": {
      "op": "DUP9"
    },
    "3726": {
      "op": "ADD"
    },
    "3727": {
      "op": "PUSH2",
      "value": "0xBBF"
    },
    "3730": {
      "jump": "i",
      "op": "JUMP"
    },
    "3731": {
      "op": "JUMPDEST"
    },
    "3732": {
      "op": "SWAP2"
    },
    "3733": {
      "op": "POP"
    },
    "3734": {
      "op": "POP"
    },
    "3735": {
      "op": "SWAP3"
    },
    "3736": {
      "op": "SWAP6"
    },
    "3737": {
      "op": "SWAP2"
    },
    "3738": {
      "op": "SWAP5"
    },
    "3739": {
      "op": "POP"
    },
    "3740": {
      "op": "SWAP3"
    },
    "3741": {
      "op": "POP"
    },
    "3742": {
      "jump": "o",
      "op": "JUMP"
    },
    "3743": {
      "op": "JUMPDEST"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3746": {
      "op": "DUP1"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3749": {
      "op": "DUP4"
    },
    "3750": {
      "op": "DUP6"
    },
    "3751": {
      "op": "SUB"
    },
    "3752": {
      "op": "SLT"
    },
    "3753": {
      "op": "ISZERO"
    },
    "3754": {
      "op": "PUSH2",
      "value": "0xEB2"
    },
    "3757": {
      "op": "JUMPI"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3760": {
      "op": "DUP1"
    },
    "3761": {
      "op": "REVERT"
    },
    "3762": {
      "op": "JUMPDEST"
    },
    "3763": {
      "op": "DUP3"
    },
    "3764": {
      "op": "CALLDATALOAD"
    },
    "3765": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3774": {
      "op": "DUP1"
    },
    "3775": {
      "op": "DUP3"
    },
    "3776": {
      "op": "GT"
    },
    "3777": {
      "op": "ISZERO"
    },
    "3778": {
      "op": "PUSH2",
      "value": "0xECA"
    },
    "3781": {
      "op": "JUMPI"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3784": {
      "op": "DUP1"
    },
    "3785": {
      "op": "REVERT"
    },
    "3786": {
      "op": "JUMPDEST"
    },
    "3787": {
      "op": "PUSH2",
      "value": "0xED6"
    },
    "3790": {
      "op": "DUP7"
    },
    "3791": {
      "op": "DUP4"
    },
    "3792": {
      "op": "DUP8"
    },
    "3793": {
      "op": "ADD"
    },
    "3794": {
      "op": "PUSH2",
      "value": "0xBBF"
    },
    "3797": {
      "jump": "i",
      "op": "JUMP"
    },
    "3798": {
      "op": "JUMPDEST"
    },
    "3799": {
      "op": "SWAP4"
    },
    "3800": {
      "op": "POP"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3803": {
      "op": "DUP6"
    },
    "3804": {
      "op": "ADD"
    },
    "3805": {
      "op": "CALLDATALOAD"
    },
    "3806": {
      "op": "SWAP2"
    },
    "3807": {
      "op": "POP"
    },
    "3808": {
      "op": "DUP1"
    },
    "3809": {
      "op": "DUP3"
    },
    "3810": {
      "op": "GT"
    },
    "3811": {
      "op": "ISZERO"
    },
    "3812": {
      "op": "PUSH2",
      "value": "0xEEC"
    },
    "3815": {
      "op": "JUMPI"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3818": {
      "op": "DUP1"
    },
    "3819": {
      "op": "REVERT"
    },
    "3820": {
      "op": "JUMPDEST"
    },
    "3821": {
      "op": "POP"
    },
    "3822": {
      "op": "PUSH2",
      "value": "0xEF9"
    },
    "3825": {
      "op": "DUP6"
    },
    "3826": {
      "op": "DUP3"
    },
    "3827": {
      "op": "DUP7"
    },
    "3828": {
      "op": "ADD"
    },
    "3829": {
      "op": "PUSH2",
      "value": "0xBBF"
    },
    "3832": {
      "jump": "i",
      "op": "JUMP"
    },
    "3833": {
      "op": "JUMPDEST"
    },
    "3834": {
      "op": "SWAP2"
    },
    "3835": {
      "op": "POP"
    },
    "3836": {
      "op": "POP"
    },
    "3837": {
      "op": "SWAP3"
    },
    "3838": {
      "op": "POP"
    },
    "3839": {
      "op": "SWAP3"
    },
    "3840": {
      "op": "SWAP1"
    },
    "3841": {
      "op": "POP"
    },
    "3842": {
      "jump": "o",
      "op": "JUMP"
    },
    "3843": {
      "op": "JUMPDEST"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3846": {
      "op": "DUP3"
    },
    "3847": {
      "op": "MLOAD"
    },
    "3848": {
      "op": "PUSH2",
      "value": "0xF15"
    },
    "3851": {
      "op": "DUP2"
    },
    "3852": {
      "op": "DUP5"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3855": {
      "op": "DUP8"
    },
    "3856": {
      "op": "ADD"
    },
    "3857": {
      "op": "PUSH2",
      "value": "0xD11"
    },
    "3860": {
      "jump": "i",
      "op": "JUMP"
    },
    "3861": {
      "op": "JUMPDEST"
    },
    "3862": {
      "op": "SWAP2"
    },
    "3863": {
      "op": "SWAP1"
    },
    "3864": {
      "op": "SWAP2"
    },
    "3865": {
      "op": "ADD"
    },
    "3866": {
      "op": "SWAP3"
    },
    "3867": {
      "op": "SWAP2"
    },
    "3868": {
      "op": "POP"
    },
    "3869": {
      "op": "POP"
    },
    "3870": {
      "jump": "o",
      "op": "JUMP"
    },
    "3871": {
      "op": "JUMPDEST"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3874": {
      "op": "DUP2"
    },
    "3875": {
      "op": "DUP2"
    },
    "3876": {
      "op": "SHR"
    },
    "3877": {
      "op": "SWAP1"
    },
    "3878": {
      "op": "DUP3"
    },
    "3879": {
      "op": "AND"
    },
    "3880": {
      "op": "DUP1"
    },
    "3881": {
      "op": "PUSH2",
      "value": "0xF33"
    },
    "3884": {
      "op": "JUMPI"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3887": {
      "op": "DUP3"
    },
    "3888": {
      "op": "AND"
    },
    "3889": {
      "op": "SWAP2"
    },
    "3890": {
      "op": "POP"
    },
    "3891": {
      "op": "JUMPDEST"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3894": {
      "op": "DUP3"
    },
    "3895": {
      "op": "LT"
    },
    "3896": {
      "op": "DUP2"
    },
    "3897": {
      "op": "SUB"
    },
    "3898": {
      "op": "PUSH2",
      "value": "0xF53"
    },
    "3901": {
      "op": "JUMPI"
    },
    "3902": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3909": {
      "op": "SHL"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3912": {
      "op": "MSTORE"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3917": {
      "op": "MSTORE"
    },
    "3918": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3922": {
      "op": "REVERT"
    },
    "3923": {
      "op": "JUMPDEST"
    },
    "3924": {
      "op": "POP"
    },
    "3925": {
      "op": "SWAP2"
    },
    "3926": {
      "op": "SWAP1"
    },
    "3927": {
      "op": "POP"
    },
    "3928": {
      "jump": "o",
      "op": "JUMP"
    },
    "3929": {
      "op": "JUMPDEST"
    },
    "3930": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3937": {
      "op": "SHL"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3940": {
      "op": "MSTORE"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3945": {
      "op": "MSTORE"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3950": {
      "op": "REVERT"
    },
    "3951": {
      "op": "JUMPDEST"
    },
    "3952": {
      "op": "DUP1"
    },
    "3953": {
      "op": "DUP3"
    },
    "3954": {
      "op": "ADD"
    },
    "3955": {
      "op": "DUP1"
    },
    "3956": {
      "op": "DUP3"
    },
    "3957": {
      "op": "GT"
    },
    "3958": {
      "op": "ISZERO"
    },
    "3959": {
      "op": "PUSH2",
      "value": "0xB7D"
    },
    "3962": {
      "op": "JUMPI"
    },
    "3963": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3968": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3970": {
      "op": "SHL"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3973": {
      "op": "MSTORE"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3978": {
      "op": "MSTORE"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3983": {
      "op": "REVERT"
    }
  },
  "sha1": "b73d96b44eee3ba7bf6bfbd5bb44df4705178ba1",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.16;\n\ncontract VotingSystem {\n    struct Voter {\n        string name;\n        string surname;\n        string PESEL; // Identity number\n        int16 age; // to check if in proper age to vote\n        bool allowedToVote; // voted or not ? Or does his rights to vote exist?\n    }\n\n    struct Candidate {\n        string name;\n        uint256 receivedVotes; // which place candidate took after finished voting\n    }\n\n    address public electionChief;\n    bool public electionOpen;\n\n    mapping(string => Voter) public voters; // voter's PESEL => Voter ---- consider using a list of voters indexed by int(PESEL)\n    mapping(string => Candidate) public candidates; // candidate's name => Candidate\n\n    Candidate[] public listOfCandidates;\n\n    constructor() {\n        electionChief = msg.sender;\n        electionOpen = true;\n\n        initializeVoters();\n        initializeCandidates();\n    }\n\n    function vote(\n        string memory voterName,\n        string memory voterSurname,\n        string memory voterPESEL,\n        string memory candidateName\n    ) public {\n        require(electionOpen, \"Election is closed!\");\n        require(\n            verifyVoter(voterName, voterSurname, voterPESEL),\n            \"Voter didn't fulfills requirements!\"\n        );\n        voters[voterPESEL].allowedToVote = false;\n        candidates[candidateName].receivedVotes += 1;\n    }\n\n    function verifyVoter(\n        string memory voterName,\n        string memory voterSurname,\n        string memory voterPESEL\n    ) public view returns (bool voterEligible) {\n        Voter memory currentVoter = voters[voterPESEL];\n        require(\n            isTheSameString(currentVoter.PESEL, voterPESEL),\n            \"This person doesn't exists in voters database!\"\n        );\n        require(\n            isTheSameString(currentVoter.name, voterName),\n            \"The name of the person is not correct!\"\n        );\n        require(\n            isTheSameString(currentVoter.surname, voterSurname),\n            \"The surname of the person is not correct!\"\n        );\n        require(currentVoter.age >= 18, \"The person is not an adult!\");\n        require(\n            currentVoter.allowedToVote,\n            \"The person is not allowed to vote!\"\n        );\n        return true; // Check if this won't work if required aren't fulfilled!!!\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == electionChief, \"Not the contract owner!\");\n        _;\n    }\n\n    function finishElection() public onlyOwner {\n        electionOpen = false;\n        listOfCandidates[0].receivedVotes = candidates[\"Kandydat 1\"]\n            .receivedVotes;\n        listOfCandidates[1].receivedVotes = candidates[\"Kandydat 2\"]\n            .receivedVotes;\n        listOfCandidates[2].receivedVotes = candidates[\"Kandydat 3\"]\n            .receivedVotes;\n    }\n\n    function votesValue(string memory candidateName)\n        public\n        view\n        returns (uint256)\n    {\n        return candidates[candidateName].receivedVotes;\n    }\n\n    function initializeCandidates() internal {\n        listOfCandidates.push(\n            Candidate({name: \"Kandydat 1\", receivedVotes: 0})\n        );\n        listOfCandidates.push(\n            Candidate({name: \"Kandydat 2\", receivedVotes: 0})\n        );\n        listOfCandidates.push(\n            Candidate({name: \"Kandydat 3\", receivedVotes: 0})\n        );\n        candidates[\"Kandydat 1\"] = listOfCandidates[0];\n        candidates[\"Kandydat 2\"] = listOfCandidates[1];\n        candidates[\"Kandydat 3\"] = listOfCandidates[2];\n    }\n\n    function initializeVoters() internal {\n        voters[\"00223390432\"] = Voter({\n            name: \"Jan\",\n            surname: \"Kowalski\",\n            PESEL: \"00223390432\",\n            age: 22,\n            allowedToVote: true\n        });\n        voters[\"90022074332\"] = Voter({\n            name: \"Halina\",\n            surname: \"Nowak\",\n            PESEL: \"90022074332\",\n            age: 32,\n            allowedToVote: true\n        });\n        voters[\"93031065465\"] = Voter({\n            name: \"Ludwik\",\n            surname: \"Montgommery\",\n            PESEL: \"93031065465\",\n            age: 29,\n            allowedToVote: true\n        });\n        voters[\"80030485668\"] = Voter({\n            name: \"Katarzyna\",\n            surname: \"Mak\",\n            PESEL: \"80030485668\",\n            age: 42,\n            allowedToVote: true\n        });\n        voters[\"91080196662\"] = Voter({\n            name: \"Joanna\",\n            surname: \"Zych\",\n            PESEL: \"91080196662\",\n            age: 31,\n            allowedToVote: true\n        });\n        voters[\"01302417347\"] = Voter({\n            name: \"Monika\",\n            surname: \"Grabowska\",\n            PESEL: \"01302417347\",\n            age: 21,\n            allowedToVote: true\n        });\n        voters[\"00221724457\"] = Voter({\n            name: \"Dariusz\",\n            surname: \"Duda\",\n            PESEL: \"00221724457\",\n            age: 22,\n            allowedToVote: true\n        });\n        voters[\"11301926436\"] = Voter({\n            name: \"Karol\",\n            surname: \"Nowak\",\n            PESEL: \"11301926436\",\n            age: 11,\n            allowedToVote: false\n        });\n    }\n\n    function isTheSameString(string memory stringOne, string memory stringTwo)\n        public\n        pure\n        returns (bool)\n    {\n        // Compare string keccak256 hashes to check equality\n        if (\n            keccak256(abi.encodePacked(stringOne)) ==\n            keccak256(abi.encodePacked(stringTwo))\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    // Found Function - maybe will be usefull in aim to index listOfCandidates by PESEL\n    /*\n    function st2num(string memory numString) public pure returns(uint) {\n        uint  val=0;\n        bytes   memory stringBytes = bytes(numString);\n        for (uint  i =  0; i<stringBytes.length; i++) {\n            uint exp = stringBytes.length - i;\n            bytes1 ival = stringBytes[i];\n            uint8 uval = uint8(ival);\n           uint jval = uval - uint(0x30);\n   \n           val +=  (uint(jval) * (10**(exp-1))); \n        }\n      return val;\n    }\n    */\n}\n",
  "sourceMap": "59:6105:0:-:0;;;791:147;;;;;;;;;-1:-1:-1;815:13:0;:26;;-1:-1:-1;;;;831:10:0;851:19;-1:-1:-1;;;;;;851:19:0;;;;-1:-1:-1;;;851:19:0;;;881:18;:16;:18::i;:::-;909:22;:20;:22::i;:::-;59:6105;;3576:1630;3647:163;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3647:163:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3647:163:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3647:163:0;;;;;;;3764:2;3647:163;;;;;;3795:4;3647:163;;;;;3623:6;:21;;;;-1:-1:-1;;;216:26:1;;267:2;258:12;;14:262;3623:21:0;;;;;;;;;;;;;;:187;;:21;;:187;;:21;:187;:::i;:::-;-1:-1:-1;3623:187:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3623:187:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3623:187:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3623:187:0;;;;;;;;;;;;;;;;;;3844:163;;;;;;;;;;;;;;;-1:-1:-1;;;3844:163:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;3844:163:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3844:163:0;;;;;;;;-1:-1:-1;;;3844:163:0;;;;3623:187;-1:-1:-1;;;3844:163:0;;;3820:21;3844:163;;3623:187;3820:21;;-1:-1:-1;;;3204:26:1;;3255:2;3246:12;;3002:262;3820:21:0;;;;;;;;;;;;;;:187;;:21;;:187;;:21;:187;:::i;:::-;-1:-1:-1;3820:187:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3820:187:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3820:187:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3820:187:0;;;;;;;;;;;;;;;;;;4041:169;;;;;;;;;;;;;;;-1:-1:-1;;;4041:169:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;;4041:169:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4041:169:0;;;;;;;;;;4164:2;-1:-1:-1;;;4041:169:0;;;;-1:-1:-1;;;;4041:169:0;;;4017:21;;3471:26:1;;;4041:169:0;-1:-1:-1;3513:12:1;4017:21:0;;;;;;;;;;;;;:193;;:21;;:193;;:21;:193;:::i;:::-;-1:-1:-1;4017:193:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4017:193:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4017:193:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4017:193:0;;;;;;;;;;;;;;;;;4244:164;;;;;;;;;;;;;;;-1:-1:-1;;;4244:164:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;4244:164:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4244:164:0;;;;;;;;;;;;;4362:2;-1:-1:-1;;;4244:164:0;;;;-1:-1:-1;;;;4244:164:0;;;4220:21;;3738:26:1;;;4244:164:0;-1:-1:-1;3780:12:1;4220:21:0;;;;;;;;;;;;;:188;;:21;;:188;;:21;:188;:::i;:::-;-1:-1:-1;4220:188:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4220:188:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4220:188:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4220:188:0;;;;;;;;;;;;;;;;;;4442:162;;;;;;;;;;;;;;;-1:-1:-1;;;4442:162:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;4442:162:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4442:162:0;;;;;;;;;;;4558:2;-1:-1:-1;;;4442:162:0;;;;4220:188;-1:-1:-1;;;4442:162:0;;;4418:21;4442:162;;4220:188;4418:21;;-1:-1:-1;;;4005:26:1;;4056:2;4047:12;;3803:262;4418:21:0;;;;;;;;;;;;;;:186;;:21;;:186;;:21;:186;:::i;:::-;-1:-1:-1;4418:186:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4418:186:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4418:186:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4418:186:0;;;;;;;;;;;;;;;;;;4638:167;;;;;;;;;;;;;;;-1:-1:-1;;;4638:167:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;4638:167:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4638:167:0;;;;;;;;;;;4759:2;-1:-1:-1;;;4638:167:0;;;;4418:186;-1:-1:-1;;;4638:167:0;;;4614:21;4638:167;;4418:186;4614:21;;-1:-1:-1;;;4272:26:1;;4323:2;4314:12;;4070:262;4614:21:0;;;;;;;;;;;;;;:191;;:21;;:191;;:21;:191;:::i;:::-;-1:-1:-1;4614:191:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4614:191:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4614:191:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4614:191:0;;;;;;;;;;;;;;;;;;4839:163;;;;;;;;;;;;;;;-1:-1:-1;;;4839:163:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;4839:163:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4839:163:0;;;;;;;;;;;4956:2;-1:-1:-1;;;4839:163:0;;;;4614:191;-1:-1:-1;;;4839:163:0;;;4815:21;4839:163;;4614:191;4815:21;;-1:-1:-1;;;4539:26:1;;4590:2;4581:12;;4337:262;4815:21:0;;;;;;;;;;;;;;:187;;:21;;:187;;:21;:187;:::i;:::-;-1:-1:-1;4815:187:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4815:187:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4815:187:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4815:187:0;;;;;;;;;;;;;;;;;;5036:163;;;;;;;;;;;;;;;-1:-1:-1;;;5036:163:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;5036:163:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5036:163:0;;;;;;;;;;;-1:-1:-1;;;5036:163:0;;;;4815:187;-1:-1:-1;;;5036:163:0;;;;5012:21;;4815:187;;5012:21;;-1:-1:-1;;;4806:26:1;;4857:2;4848:12;;4604:262;5012:21:0;;;;;;;;;;;;;;:187;;:21;;:187;;:21;:187;:::i;:::-;-1:-1:-1;5012:187:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5012:187:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5012:187:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5012:187:0;;;;;;;;;;;;;;;;;3576:1630::o;3042:528::-;3128:49;;;;;;;;;;;;;;;-1:-1:-1;;;3128:49:0;;;;;;;-1:-1:-1;3128:49:0;;;;;;3093:16;:94;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3093:94:0;;;;;;;;:::i;:::-;-1:-1:-1;3093:94:0;;;;;;;;;;3232:49;;;;;;;;;;;;;;;-1:-1:-1;;;3232:49:0;;;;;;;-1:-1:-1;3232:49:0;;;;;;3197:16;:94;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3197:94:0;;;;;;;;:::i;:::-;-1:-1:-1;3197:94:0;;;;;;;;;;3336:49;;;;;;;;;;;;;;;-1:-1:-1;;;3336:49:0;;;;;;;-1:-1:-1;3336:49:0;;;;;;3301:16;:94;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3301:94:0;;;;;;;;:::i;:::-;;;;;;;;;;;;3432:16;3449:1;3432:19;;;;;;;;:::i;:::-;;;;;;;;;;;3405:10;:24;;;;-1:-1:-1;;;5205:25:1;;5255:2;5246:12;;5003:261;3405:24:0;;;;;;;;;;;;;;;:46;;:24;:46;:::i;:::-;;;;;;;;;;;;;3488:16;3505:1;3488:19;;;;;;;;:::i;:::-;;;;;;;;;;;3461:10;:24;;;;-1:-1:-1;;;6907:25:1;;6957:2;6948:12;;6705:261;3461:24:0;;;;;;;;;;;;;;;:46;;:24;:46;:::i;:::-;-1:-1:-1;3461:46:0;;;;;;;;3544:16;:19;;3561:1;;3544:19;;;;;;:::i;:::-;;;;;;;;;;;3517:10;:24;;;;-1:-1:-1;;;7173:25:1;;7223:2;7214:12;;6971:261;3517:24:0;;;;;;;;;;;;;;;:46;;:24;:46;:::i;:::-;-1:-1:-1;3517:46:0;;;;;;;;3042:528::o;281:127:1:-;342:10;337:3;333:20;330:1;323:31;373:4;370:1;363:15;397:4;394:1;387:15;413:380;492:1;488:12;;;;535;;;556:61;;610:4;602:6;598:17;588:27;;556:61;663:2;655:6;652:14;632:18;629:38;626:161;;709:10;704:3;700:20;697:1;690:31;744:4;741:1;734:15;772:4;769:1;762:15;626:161;;413:380;;;:::o;924:545::-;1026:2;1021:3;1018:11;1015:448;;;1062:1;1087:5;1083:2;1076:17;1132:4;1128:2;1118:19;1202:2;1190:10;1186:19;1183:1;1179:27;1173:4;1169:38;1238:4;1226:10;1223:20;1220:47;;;-1:-1:-1;1261:4:1;1220:47;1316:2;1311:3;1307:12;1304:1;1300:20;1294:4;1290:31;1280:41;;1371:82;1389:2;1382:5;1379:13;1371:82;;;1434:17;;;1415:1;1404:13;1371:82;;;1375:3;;;1015:448;924:545;;;:::o;1645:1352::-;1765:10;;-1:-1:-1;;;;;1787:30:1;;1784:56;;;1820:18;;:::i;:::-;1849:97;1939:6;1899:38;1931:4;1925:11;1899:38;:::i;:::-;1893:4;1849:97;:::i;:::-;2001:4;;2065:2;2054:14;;2082:1;2077:663;;;;2784:1;2801:6;2798:89;;;-1:-1:-1;2853:19:1;;;2847:26;2798:89;-1:-1:-1;;1602:1:1;1598:11;;;1594:24;1590:29;1580:40;1626:1;1622:11;;;1577:57;2900:81;;2047:944;;2077:663;871:1;864:14;;;908:4;895:18;;-1:-1:-1;;2113:20:1;;;2231:236;2245:7;2242:1;2239:14;2231:236;;;2334:19;;;2328:26;2313:42;;2426:27;;;;2394:1;2382:14;;;;2261:19;;2231:236;;;2235:3;2495:6;2486:7;2483:19;2480:201;;;2556:19;;;2550:26;-1:-1:-1;;2639:1:1;2635:14;;;2651:3;2631:24;2627:37;2623:42;2608:58;2593:74;;2480:201;-1:-1:-1;;;;;2727:1:1;2711:14;;;2707:22;2694:36;;-1:-1:-1;1645:1352:1:o;4871:127::-;4932:10;4927:3;4923:20;4920:1;4913:31;4963:4;4960:1;4953:15;4987:4;4984:1;4977:15;5269:1431;5384:3;5378:4;5375:13;5372:26;;5391:5;;5269:1431::o;5372:26::-;5421:37;5453:3;5447:10;5421:37;:::i;:::-;-1:-1:-1;;;;;5470:30:1;;5467:56;;;5503:18;;:::i;:::-;5532:97;5622:6;5582:38;5614:4;5608:11;5582:38;:::i;5532:97::-;5655:1;5683:2;5675:6;5672:14;5700:1;5695:748;;;;6487:1;6504:6;6501:89;;;-1:-1:-1;6556:19:1;;;6550:26;6501:89;-1:-1:-1;;1602:1:1;1598:11;;;1594:24;1590:29;1580:40;1626:1;1622:11;;;1577:57;6603:81;;5665:1029;;5695:748;871:1;864:14;;;908:4;895:18;;-1:-1:-1;;5731:20:1;;;871:1;864:14;;;908:4;895:18;;5895:9;5917:251;5931:7;5928:1;5925:14;5917:251;;;6013:21;;;6007:28;5992:44;;6063:1;6136:18;;;;6091:15;;;;5954:4;5947:12;5917:251;;;5921:3;6196:6;6187:7;6184:19;6181:203;;;6257:21;;;6251:28;-1:-1:-1;;6342:1:1;6338:14;;;6354:3;6334:24;6330:37;6326:42;6311:58;6296:74;;6181:203;;;;6430:1;6421:6;6418:1;6414:14;6410:22;6404:4;6397:36;5665:1029;;;;5269:1431;;:::o;6971:261::-;59:6105:0;;;;;;",
  "sourcePath": "contracts/VotingSystem.sol",
  "type": "contract"
}